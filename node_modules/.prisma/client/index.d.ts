
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Animal
 * 
 */
export type Animal = $Result.DefaultSelection<Prisma.$AnimalPayload>
/**
 * Model Adoptante
 * 
 */
export type Adoptante = $Result.DefaultSelection<Prisma.$AdoptantePayload>
/**
 * Model refugio_transito
 * 
 */
export type refugio_transito = $Result.DefaultSelection<Prisma.$refugio_transitoPayload>
/**
 * Model animal_en_refugio_transito
 * 
 */
export type animal_en_refugio_transito = $Result.DefaultSelection<Prisma.$animal_en_refugio_transitoPayload>
/**
 * Model animal_adoptado
 * 
 */
export type animal_adoptado = $Result.DefaultSelection<Prisma.$animal_adoptadoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Animals
 * const animals = await prisma.animal.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Animals
   * const animals = await prisma.animal.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.animal`: Exposes CRUD operations for the **Animal** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Animals
    * const animals = await prisma.animal.findMany()
    * ```
    */
  get animal(): Prisma.AnimalDelegate<ExtArgs>;

  /**
   * `prisma.adoptante`: Exposes CRUD operations for the **Adoptante** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Adoptantes
    * const adoptantes = await prisma.adoptante.findMany()
    * ```
    */
  get adoptante(): Prisma.AdoptanteDelegate<ExtArgs>;

  /**
   * `prisma.refugio_transito`: Exposes CRUD operations for the **refugio_transito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refugio_transitos
    * const refugio_transitos = await prisma.refugio_transito.findMany()
    * ```
    */
  get refugio_transito(): Prisma.refugio_transitoDelegate<ExtArgs>;

  /**
   * `prisma.animal_en_refugio_transito`: Exposes CRUD operations for the **animal_en_refugio_transito** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Animal_en_refugio_transitos
    * const animal_en_refugio_transitos = await prisma.animal_en_refugio_transito.findMany()
    * ```
    */
  get animal_en_refugio_transito(): Prisma.animal_en_refugio_transitoDelegate<ExtArgs>;

  /**
   * `prisma.animal_adoptado`: Exposes CRUD operations for the **animal_adoptado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Animal_adoptados
    * const animal_adoptados = await prisma.animal_adoptado.findMany()
    * ```
    */
  get animal_adoptado(): Prisma.animal_adoptadoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.0.1
   * Query Engine version: 5dbef10bdbfb579e07d35cc85fb1518d357cb99e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Animal: 'Animal',
    Adoptante: 'Adoptante',
    refugio_transito: 'refugio_transito',
    animal_en_refugio_transito: 'animal_en_refugio_transito',
    animal_adoptado: 'animal_adoptado'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "animal" | "adoptante" | "refugio_transito" | "animal_en_refugio_transito" | "animal_adoptado"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Animal: {
        payload: Prisma.$AnimalPayload<ExtArgs>
        fields: Prisma.AnimalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AnimalFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AnimalFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          findFirst: {
            args: Prisma.AnimalFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AnimalFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          findMany: {
            args: Prisma.AnimalFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>[]
          }
          create: {
            args: Prisma.AnimalCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          createMany: {
            args: Prisma.AnimalCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AnimalCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>[]
          }
          delete: {
            args: Prisma.AnimalDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          update: {
            args: Prisma.AnimalUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          deleteMany: {
            args: Prisma.AnimalDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AnimalUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AnimalUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AnimalPayload>
          }
          aggregate: {
            args: Prisma.AnimalAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimal>
          }
          groupBy: {
            args: Prisma.AnimalGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnimalGroupByOutputType>[]
          }
          count: {
            args: Prisma.AnimalCountArgs<ExtArgs>
            result: $Utils.Optional<AnimalCountAggregateOutputType> | number
          }
        }
      }
      Adoptante: {
        payload: Prisma.$AdoptantePayload<ExtArgs>
        fields: Prisma.AdoptanteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AdoptanteFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AdoptanteFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          findFirst: {
            args: Prisma.AdoptanteFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AdoptanteFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          findMany: {
            args: Prisma.AdoptanteFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>[]
          }
          create: {
            args: Prisma.AdoptanteCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          createMany: {
            args: Prisma.AdoptanteCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AdoptanteCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>[]
          }
          delete: {
            args: Prisma.AdoptanteDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          update: {
            args: Prisma.AdoptanteUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          deleteMany: {
            args: Prisma.AdoptanteDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AdoptanteUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AdoptanteUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AdoptantePayload>
          }
          aggregate: {
            args: Prisma.AdoptanteAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdoptante>
          }
          groupBy: {
            args: Prisma.AdoptanteGroupByArgs<ExtArgs>
            result: $Utils.Optional<AdoptanteGroupByOutputType>[]
          }
          count: {
            args: Prisma.AdoptanteCountArgs<ExtArgs>
            result: $Utils.Optional<AdoptanteCountAggregateOutputType> | number
          }
        }
      }
      refugio_transito: {
        payload: Prisma.$refugio_transitoPayload<ExtArgs>
        fields: Prisma.refugio_transitoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refugio_transitoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refugio_transitoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          findFirst: {
            args: Prisma.refugio_transitoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refugio_transitoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          findMany: {
            args: Prisma.refugio_transitoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>[]
          }
          create: {
            args: Prisma.refugio_transitoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          createMany: {
            args: Prisma.refugio_transitoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refugio_transitoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>[]
          }
          delete: {
            args: Prisma.refugio_transitoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          update: {
            args: Prisma.refugio_transitoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          deleteMany: {
            args: Prisma.refugio_transitoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.refugio_transitoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.refugio_transitoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refugio_transitoPayload>
          }
          aggregate: {
            args: Prisma.Refugio_transitoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefugio_transito>
          }
          groupBy: {
            args: Prisma.refugio_transitoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Refugio_transitoGroupByOutputType>[]
          }
          count: {
            args: Prisma.refugio_transitoCountArgs<ExtArgs>
            result: $Utils.Optional<Refugio_transitoCountAggregateOutputType> | number
          }
        }
      }
      animal_en_refugio_transito: {
        payload: Prisma.$animal_en_refugio_transitoPayload<ExtArgs>
        fields: Prisma.animal_en_refugio_transitoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.animal_en_refugio_transitoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.animal_en_refugio_transitoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          findFirst: {
            args: Prisma.animal_en_refugio_transitoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.animal_en_refugio_transitoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          findMany: {
            args: Prisma.animal_en_refugio_transitoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>[]
          }
          create: {
            args: Prisma.animal_en_refugio_transitoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          createMany: {
            args: Prisma.animal_en_refugio_transitoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.animal_en_refugio_transitoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>[]
          }
          delete: {
            args: Prisma.animal_en_refugio_transitoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          update: {
            args: Prisma.animal_en_refugio_transitoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          deleteMany: {
            args: Prisma.animal_en_refugio_transitoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.animal_en_refugio_transitoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.animal_en_refugio_transitoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_en_refugio_transitoPayload>
          }
          aggregate: {
            args: Prisma.Animal_en_refugio_transitoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimal_en_refugio_transito>
          }
          groupBy: {
            args: Prisma.animal_en_refugio_transitoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Animal_en_refugio_transitoGroupByOutputType>[]
          }
          count: {
            args: Prisma.animal_en_refugio_transitoCountArgs<ExtArgs>
            result: $Utils.Optional<Animal_en_refugio_transitoCountAggregateOutputType> | number
          }
        }
      }
      animal_adoptado: {
        payload: Prisma.$animal_adoptadoPayload<ExtArgs>
        fields: Prisma.animal_adoptadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.animal_adoptadoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.animal_adoptadoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          findFirst: {
            args: Prisma.animal_adoptadoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.animal_adoptadoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          findMany: {
            args: Prisma.animal_adoptadoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>[]
          }
          create: {
            args: Prisma.animal_adoptadoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          createMany: {
            args: Prisma.animal_adoptadoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.animal_adoptadoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>[]
          }
          delete: {
            args: Prisma.animal_adoptadoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          update: {
            args: Prisma.animal_adoptadoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          deleteMany: {
            args: Prisma.animal_adoptadoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.animal_adoptadoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.animal_adoptadoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animal_adoptadoPayload>
          }
          aggregate: {
            args: Prisma.Animal_adoptadoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimal_adoptado>
          }
          groupBy: {
            args: Prisma.animal_adoptadoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Animal_adoptadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.animal_adoptadoCountArgs<ExtArgs>
            result: $Utils.Optional<Animal_adoptadoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AnimalCountOutputType
   */

  export type AnimalCountOutputType = {
    animal_en_refugio_transito: number
    animal_adoptado: number
  }

  export type AnimalCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_en_refugio_transito?: boolean | AnimalCountOutputTypeCountAnimal_en_refugio_transitoArgs
    animal_adoptado?: boolean | AnimalCountOutputTypeCountAnimal_adoptadoArgs
  }

  // Custom InputTypes
  /**
   * AnimalCountOutputType without action
   */
  export type AnimalCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalCountOutputType
     */
    select?: AnimalCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AnimalCountOutputType without action
   */
  export type AnimalCountOutputTypeCountAnimal_en_refugio_transitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_en_refugio_transitoWhereInput
  }

  /**
   * AnimalCountOutputType without action
   */
  export type AnimalCountOutputTypeCountAnimal_adoptadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_adoptadoWhereInput
  }


  /**
   * Count Type AdoptanteCountOutputType
   */

  export type AdoptanteCountOutputType = {
    animal_adoptado: number
  }

  export type AdoptanteCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_adoptado?: boolean | AdoptanteCountOutputTypeCountAnimal_adoptadoArgs
  }

  // Custom InputTypes
  /**
   * AdoptanteCountOutputType without action
   */
  export type AdoptanteCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AdoptanteCountOutputType
     */
    select?: AdoptanteCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AdoptanteCountOutputType without action
   */
  export type AdoptanteCountOutputTypeCountAnimal_adoptadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_adoptadoWhereInput
  }


  /**
   * Count Type Refugio_transitoCountOutputType
   */

  export type Refugio_transitoCountOutputType = {
    animal_en_refugio_transito: number
  }

  export type Refugio_transitoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_en_refugio_transito?: boolean | Refugio_transitoCountOutputTypeCountAnimal_en_refugio_transitoArgs
  }

  // Custom InputTypes
  /**
   * Refugio_transitoCountOutputType without action
   */
  export type Refugio_transitoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Refugio_transitoCountOutputType
     */
    select?: Refugio_transitoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Refugio_transitoCountOutputType without action
   */
  export type Refugio_transitoCountOutputTypeCountAnimal_en_refugio_transitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_en_refugio_transitoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Animal
   */

  export type AggregateAnimal = {
    _count: AnimalCountAggregateOutputType | null
    _avg: AnimalAvgAggregateOutputType | null
    _sum: AnimalSumAggregateOutputType | null
    _min: AnimalMinAggregateOutputType | null
    _max: AnimalMaxAggregateOutputType | null
  }

  export type AnimalAvgAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type AnimalSumAggregateOutputType = {
    id: number | null
    edad: number | null
  }

  export type AnimalMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    sexo: string | null
    especie: string | null
    edad: number | null
    raza: string | null
  }

  export type AnimalMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    sexo: string | null
    especie: string | null
    edad: number | null
    raza: string | null
  }

  export type AnimalCountAggregateOutputType = {
    id: number
    nombre: number
    sexo: number
    especie: number
    edad: number
    raza: number
    _all: number
  }


  export type AnimalAvgAggregateInputType = {
    id?: true
    edad?: true
  }

  export type AnimalSumAggregateInputType = {
    id?: true
    edad?: true
  }

  export type AnimalMinAggregateInputType = {
    id?: true
    nombre?: true
    sexo?: true
    especie?: true
    edad?: true
    raza?: true
  }

  export type AnimalMaxAggregateInputType = {
    id?: true
    nombre?: true
    sexo?: true
    especie?: true
    edad?: true
    raza?: true
  }

  export type AnimalCountAggregateInputType = {
    id?: true
    nombre?: true
    sexo?: true
    especie?: true
    edad?: true
    raza?: true
    _all?: true
  }

  export type AnimalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Animal to aggregate.
     */
    where?: AnimalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalOrderByWithRelationInput | AnimalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AnimalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Animals
    **/
    _count?: true | AnimalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnimalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnimalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnimalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnimalMaxAggregateInputType
  }

  export type GetAnimalAggregateType<T extends AnimalAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimal]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimal[P]>
      : GetScalarType<T[P], AggregateAnimal[P]>
  }




  export type AnimalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AnimalWhereInput
    orderBy?: AnimalOrderByWithAggregationInput | AnimalOrderByWithAggregationInput[]
    by: AnimalScalarFieldEnum[] | AnimalScalarFieldEnum
    having?: AnimalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnimalCountAggregateInputType | true
    _avg?: AnimalAvgAggregateInputType
    _sum?: AnimalSumAggregateInputType
    _min?: AnimalMinAggregateInputType
    _max?: AnimalMaxAggregateInputType
  }

  export type AnimalGroupByOutputType = {
    id: number
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    _count: AnimalCountAggregateOutputType | null
    _avg: AnimalAvgAggregateOutputType | null
    _sum: AnimalSumAggregateOutputType | null
    _min: AnimalMinAggregateOutputType | null
    _max: AnimalMaxAggregateOutputType | null
  }

  type GetAnimalGroupByPayload<T extends AnimalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnimalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnimalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnimalGroupByOutputType[P]>
            : GetScalarType<T[P], AnimalGroupByOutputType[P]>
        }
      >
    >


  export type AnimalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    sexo?: boolean
    especie?: boolean
    edad?: boolean
    raza?: boolean
    animal_en_refugio_transito?: boolean | Animal$animal_en_refugio_transitoArgs<ExtArgs>
    animal_adoptado?: boolean | Animal$animal_adoptadoArgs<ExtArgs>
    _count?: boolean | AnimalCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animal"]>

  export type AnimalSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    sexo?: boolean
    especie?: boolean
    edad?: boolean
    raza?: boolean
  }, ExtArgs["result"]["animal"]>

  export type AnimalSelectScalar = {
    id?: boolean
    nombre?: boolean
    sexo?: boolean
    especie?: boolean
    edad?: boolean
    raza?: boolean
  }

  export type AnimalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_en_refugio_transito?: boolean | Animal$animal_en_refugio_transitoArgs<ExtArgs>
    animal_adoptado?: boolean | Animal$animal_adoptadoArgs<ExtArgs>
    _count?: boolean | AnimalCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AnimalIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AnimalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Animal"
    objects: {
      animal_en_refugio_transito: Prisma.$animal_en_refugio_transitoPayload<ExtArgs>[]
      animal_adoptado: Prisma.$animal_adoptadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      sexo: string
      especie: string
      edad: number
      raza: string
    }, ExtArgs["result"]["animal"]>
    composites: {}
  }

  type AnimalGetPayload<S extends boolean | null | undefined | AnimalDefaultArgs> = $Result.GetResult<Prisma.$AnimalPayload, S>

  type AnimalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AnimalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AnimalCountAggregateInputType | true
    }

  export interface AnimalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Animal'], meta: { name: 'Animal' } }
    /**
     * Find zero or one Animal that matches the filter.
     * @param {AnimalFindUniqueArgs} args - Arguments to find a Animal
     * @example
     * // Get one Animal
     * const animal = await prisma.animal.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AnimalFindUniqueArgs>(args: SelectSubset<T, AnimalFindUniqueArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Animal that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AnimalFindUniqueOrThrowArgs} args - Arguments to find a Animal
     * @example
     * // Get one Animal
     * const animal = await prisma.animal.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AnimalFindUniqueOrThrowArgs>(args: SelectSubset<T, AnimalFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Animal that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalFindFirstArgs} args - Arguments to find a Animal
     * @example
     * // Get one Animal
     * const animal = await prisma.animal.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AnimalFindFirstArgs>(args?: SelectSubset<T, AnimalFindFirstArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Animal that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalFindFirstOrThrowArgs} args - Arguments to find a Animal
     * @example
     * // Get one Animal
     * const animal = await prisma.animal.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AnimalFindFirstOrThrowArgs>(args?: SelectSubset<T, AnimalFindFirstOrThrowArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Animals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Animals
     * const animals = await prisma.animal.findMany()
     * 
     * // Get first 10 Animals
     * const animals = await prisma.animal.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const animalWithIdOnly = await prisma.animal.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AnimalFindManyArgs>(args?: SelectSubset<T, AnimalFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Animal.
     * @param {AnimalCreateArgs} args - Arguments to create a Animal.
     * @example
     * // Create one Animal
     * const Animal = await prisma.animal.create({
     *   data: {
     *     // ... data to create a Animal
     *   }
     * })
     * 
     */
    create<T extends AnimalCreateArgs>(args: SelectSubset<T, AnimalCreateArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Animals.
     * @param {AnimalCreateManyArgs} args - Arguments to create many Animals.
     * @example
     * // Create many Animals
     * const animal = await prisma.animal.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AnimalCreateManyArgs>(args?: SelectSubset<T, AnimalCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Animals and returns the data saved in the database.
     * @param {AnimalCreateManyAndReturnArgs} args - Arguments to create many Animals.
     * @example
     * // Create many Animals
     * const animal = await prisma.animal.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Animals and only return the `id`
     * const animalWithIdOnly = await prisma.animal.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AnimalCreateManyAndReturnArgs>(args?: SelectSubset<T, AnimalCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Animal.
     * @param {AnimalDeleteArgs} args - Arguments to delete one Animal.
     * @example
     * // Delete one Animal
     * const Animal = await prisma.animal.delete({
     *   where: {
     *     // ... filter to delete one Animal
     *   }
     * })
     * 
     */
    delete<T extends AnimalDeleteArgs>(args: SelectSubset<T, AnimalDeleteArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Animal.
     * @param {AnimalUpdateArgs} args - Arguments to update one Animal.
     * @example
     * // Update one Animal
     * const animal = await prisma.animal.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AnimalUpdateArgs>(args: SelectSubset<T, AnimalUpdateArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Animals.
     * @param {AnimalDeleteManyArgs} args - Arguments to filter Animals to delete.
     * @example
     * // Delete a few Animals
     * const { count } = await prisma.animal.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AnimalDeleteManyArgs>(args?: SelectSubset<T, AnimalDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Animals
     * const animal = await prisma.animal.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AnimalUpdateManyArgs>(args: SelectSubset<T, AnimalUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Animal.
     * @param {AnimalUpsertArgs} args - Arguments to update or create a Animal.
     * @example
     * // Update or create a Animal
     * const animal = await prisma.animal.upsert({
     *   create: {
     *     // ... data to create a Animal
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Animal we want to update
     *   }
     * })
     */
    upsert<T extends AnimalUpsertArgs>(args: SelectSubset<T, AnimalUpsertArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Animals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalCountArgs} args - Arguments to filter Animals to count.
     * @example
     * // Count the number of Animals
     * const count = await prisma.animal.count({
     *   where: {
     *     // ... the filter for the Animals we want to count
     *   }
     * })
    **/
    count<T extends AnimalCountArgs>(
      args?: Subset<T, AnimalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnimalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Animal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnimalAggregateArgs>(args: Subset<T, AnimalAggregateArgs>): Prisma.PrismaPromise<GetAnimalAggregateType<T>>

    /**
     * Group by Animal.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AnimalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AnimalGroupByArgs['orderBy'] }
        : { orderBy?: AnimalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AnimalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Animal model
   */
  readonly fields: AnimalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Animal.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AnimalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal_en_refugio_transito<T extends Animal$animal_en_refugio_transitoArgs<ExtArgs> = {}>(args?: Subset<T, Animal$animal_en_refugio_transitoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findMany"> | Null>
    animal_adoptado<T extends Animal$animal_adoptadoArgs<ExtArgs> = {}>(args?: Subset<T, Animal$animal_adoptadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Animal model
   */ 
  interface AnimalFieldRefs {
    readonly id: FieldRef<"Animal", 'Int'>
    readonly nombre: FieldRef<"Animal", 'String'>
    readonly sexo: FieldRef<"Animal", 'String'>
    readonly especie: FieldRef<"Animal", 'String'>
    readonly edad: FieldRef<"Animal", 'Int'>
    readonly raza: FieldRef<"Animal", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Animal findUnique
   */
  export type AnimalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter, which Animal to fetch.
     */
    where: AnimalWhereUniqueInput
  }

  /**
   * Animal findUniqueOrThrow
   */
  export type AnimalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter, which Animal to fetch.
     */
    where: AnimalWhereUniqueInput
  }

  /**
   * Animal findFirst
   */
  export type AnimalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter, which Animal to fetch.
     */
    where?: AnimalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalOrderByWithRelationInput | AnimalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Animals.
     */
    cursor?: AnimalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Animals.
     */
    distinct?: AnimalScalarFieldEnum | AnimalScalarFieldEnum[]
  }

  /**
   * Animal findFirstOrThrow
   */
  export type AnimalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter, which Animal to fetch.
     */
    where?: AnimalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalOrderByWithRelationInput | AnimalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Animals.
     */
    cursor?: AnimalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Animals.
     */
    distinct?: AnimalScalarFieldEnum | AnimalScalarFieldEnum[]
  }

  /**
   * Animal findMany
   */
  export type AnimalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter, which Animals to fetch.
     */
    where?: AnimalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Animals to fetch.
     */
    orderBy?: AnimalOrderByWithRelationInput | AnimalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Animals.
     */
    cursor?: AnimalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Animals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Animals.
     */
    skip?: number
    distinct?: AnimalScalarFieldEnum | AnimalScalarFieldEnum[]
  }

  /**
   * Animal create
   */
  export type AnimalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * The data needed to create a Animal.
     */
    data: XOR<AnimalCreateInput, AnimalUncheckedCreateInput>
  }

  /**
   * Animal createMany
   */
  export type AnimalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Animals.
     */
    data: AnimalCreateManyInput | AnimalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Animal createManyAndReturn
   */
  export type AnimalCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Animals.
     */
    data: AnimalCreateManyInput | AnimalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Animal update
   */
  export type AnimalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * The data needed to update a Animal.
     */
    data: XOR<AnimalUpdateInput, AnimalUncheckedUpdateInput>
    /**
     * Choose, which Animal to update.
     */
    where: AnimalWhereUniqueInput
  }

  /**
   * Animal updateMany
   */
  export type AnimalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Animals.
     */
    data: XOR<AnimalUpdateManyMutationInput, AnimalUncheckedUpdateManyInput>
    /**
     * Filter which Animals to update
     */
    where?: AnimalWhereInput
  }

  /**
   * Animal upsert
   */
  export type AnimalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * The filter to search for the Animal to update in case it exists.
     */
    where: AnimalWhereUniqueInput
    /**
     * In case the Animal found by the `where` argument doesn't exist, create a new Animal with this data.
     */
    create: XOR<AnimalCreateInput, AnimalUncheckedCreateInput>
    /**
     * In case the Animal was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AnimalUpdateInput, AnimalUncheckedUpdateInput>
  }

  /**
   * Animal delete
   */
  export type AnimalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
    /**
     * Filter which Animal to delete.
     */
    where: AnimalWhereUniqueInput
  }

  /**
   * Animal deleteMany
   */
  export type AnimalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Animals to delete
     */
    where?: AnimalWhereInput
  }

  /**
   * Animal.animal_en_refugio_transito
   */
  export type Animal$animal_en_refugio_transitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    where?: animal_en_refugio_transitoWhereInput
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Animal_en_refugio_transitoScalarFieldEnum | Animal_en_refugio_transitoScalarFieldEnum[]
  }

  /**
   * Animal.animal_adoptado
   */
  export type Animal$animal_adoptadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    where?: animal_adoptadoWhereInput
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    cursor?: animal_adoptadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Animal_adoptadoScalarFieldEnum | Animal_adoptadoScalarFieldEnum[]
  }

  /**
   * Animal without action
   */
  export type AnimalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Animal
     */
    select?: AnimalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AnimalInclude<ExtArgs> | null
  }


  /**
   * Model Adoptante
   */

  export type AggregateAdoptante = {
    _count: AdoptanteCountAggregateOutputType | null
    _avg: AdoptanteAvgAggregateOutputType | null
    _sum: AdoptanteSumAggregateOutputType | null
    _min: AdoptanteMinAggregateOutputType | null
    _max: AdoptanteMaxAggregateOutputType | null
  }

  export type AdoptanteAvgAggregateOutputType = {
    id: number | null
    edad: number | null
    telefono: number | null
  }

  export type AdoptanteSumAggregateOutputType = {
    id: number | null
    edad: number | null
    telefono: number | null
  }

  export type AdoptanteMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    edad: number | null
    direccion: string | null
    email: string | null
    telefono: number | null
  }

  export type AdoptanteMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    edad: number | null
    direccion: string | null
    email: string | null
    telefono: number | null
  }

  export type AdoptanteCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    edad: number
    direccion: number
    email: number
    telefono: number
    _all: number
  }


  export type AdoptanteAvgAggregateInputType = {
    id?: true
    edad?: true
    telefono?: true
  }

  export type AdoptanteSumAggregateInputType = {
    id?: true
    edad?: true
    telefono?: true
  }

  export type AdoptanteMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    edad?: true
    direccion?: true
    email?: true
    telefono?: true
  }

  export type AdoptanteMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    edad?: true
    direccion?: true
    email?: true
    telefono?: true
  }

  export type AdoptanteCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    edad?: true
    direccion?: true
    email?: true
    telefono?: true
    _all?: true
  }

  export type AdoptanteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Adoptante to aggregate.
     */
    where?: AdoptanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Adoptantes to fetch.
     */
    orderBy?: AdoptanteOrderByWithRelationInput | AdoptanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AdoptanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Adoptantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Adoptantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Adoptantes
    **/
    _count?: true | AdoptanteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AdoptanteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AdoptanteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AdoptanteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AdoptanteMaxAggregateInputType
  }

  export type GetAdoptanteAggregateType<T extends AdoptanteAggregateArgs> = {
        [P in keyof T & keyof AggregateAdoptante]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdoptante[P]>
      : GetScalarType<T[P], AggregateAdoptante[P]>
  }




  export type AdoptanteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AdoptanteWhereInput
    orderBy?: AdoptanteOrderByWithAggregationInput | AdoptanteOrderByWithAggregationInput[]
    by: AdoptanteScalarFieldEnum[] | AdoptanteScalarFieldEnum
    having?: AdoptanteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AdoptanteCountAggregateInputType | true
    _avg?: AdoptanteAvgAggregateInputType
    _sum?: AdoptanteSumAggregateInputType
    _min?: AdoptanteMinAggregateInputType
    _max?: AdoptanteMaxAggregateInputType
  }

  export type AdoptanteGroupByOutputType = {
    id: number
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
    _count: AdoptanteCountAggregateOutputType | null
    _avg: AdoptanteAvgAggregateOutputType | null
    _sum: AdoptanteSumAggregateOutputType | null
    _min: AdoptanteMinAggregateOutputType | null
    _max: AdoptanteMaxAggregateOutputType | null
  }

  type GetAdoptanteGroupByPayload<T extends AdoptanteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AdoptanteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AdoptanteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AdoptanteGroupByOutputType[P]>
            : GetScalarType<T[P], AdoptanteGroupByOutputType[P]>
        }
      >
    >


  export type AdoptanteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    edad?: boolean
    direccion?: boolean
    email?: boolean
    telefono?: boolean
    animal_adoptado?: boolean | Adoptante$animal_adoptadoArgs<ExtArgs>
    _count?: boolean | AdoptanteCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["adoptante"]>

  export type AdoptanteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    edad?: boolean
    direccion?: boolean
    email?: boolean
    telefono?: boolean
  }, ExtArgs["result"]["adoptante"]>

  export type AdoptanteSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    edad?: boolean
    direccion?: boolean
    email?: boolean
    telefono?: boolean
  }

  export type AdoptanteInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_adoptado?: boolean | Adoptante$animal_adoptadoArgs<ExtArgs>
    _count?: boolean | AdoptanteCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AdoptanteIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AdoptantePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Adoptante"
    objects: {
      animal_adoptado: Prisma.$animal_adoptadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      apellido: string
      edad: number
      direccion: string
      email: string
      telefono: number
    }, ExtArgs["result"]["adoptante"]>
    composites: {}
  }

  type AdoptanteGetPayload<S extends boolean | null | undefined | AdoptanteDefaultArgs> = $Result.GetResult<Prisma.$AdoptantePayload, S>

  type AdoptanteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AdoptanteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AdoptanteCountAggregateInputType | true
    }

  export interface AdoptanteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Adoptante'], meta: { name: 'Adoptante' } }
    /**
     * Find zero or one Adoptante that matches the filter.
     * @param {AdoptanteFindUniqueArgs} args - Arguments to find a Adoptante
     * @example
     * // Get one Adoptante
     * const adoptante = await prisma.adoptante.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AdoptanteFindUniqueArgs>(args: SelectSubset<T, AdoptanteFindUniqueArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Adoptante that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AdoptanteFindUniqueOrThrowArgs} args - Arguments to find a Adoptante
     * @example
     * // Get one Adoptante
     * const adoptante = await prisma.adoptante.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AdoptanteFindUniqueOrThrowArgs>(args: SelectSubset<T, AdoptanteFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Adoptante that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteFindFirstArgs} args - Arguments to find a Adoptante
     * @example
     * // Get one Adoptante
     * const adoptante = await prisma.adoptante.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AdoptanteFindFirstArgs>(args?: SelectSubset<T, AdoptanteFindFirstArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Adoptante that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteFindFirstOrThrowArgs} args - Arguments to find a Adoptante
     * @example
     * // Get one Adoptante
     * const adoptante = await prisma.adoptante.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AdoptanteFindFirstOrThrowArgs>(args?: SelectSubset<T, AdoptanteFindFirstOrThrowArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Adoptantes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Adoptantes
     * const adoptantes = await prisma.adoptante.findMany()
     * 
     * // Get first 10 Adoptantes
     * const adoptantes = await prisma.adoptante.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const adoptanteWithIdOnly = await prisma.adoptante.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AdoptanteFindManyArgs>(args?: SelectSubset<T, AdoptanteFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Adoptante.
     * @param {AdoptanteCreateArgs} args - Arguments to create a Adoptante.
     * @example
     * // Create one Adoptante
     * const Adoptante = await prisma.adoptante.create({
     *   data: {
     *     // ... data to create a Adoptante
     *   }
     * })
     * 
     */
    create<T extends AdoptanteCreateArgs>(args: SelectSubset<T, AdoptanteCreateArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Adoptantes.
     * @param {AdoptanteCreateManyArgs} args - Arguments to create many Adoptantes.
     * @example
     * // Create many Adoptantes
     * const adoptante = await prisma.adoptante.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AdoptanteCreateManyArgs>(args?: SelectSubset<T, AdoptanteCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Adoptantes and returns the data saved in the database.
     * @param {AdoptanteCreateManyAndReturnArgs} args - Arguments to create many Adoptantes.
     * @example
     * // Create many Adoptantes
     * const adoptante = await prisma.adoptante.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Adoptantes and only return the `id`
     * const adoptanteWithIdOnly = await prisma.adoptante.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AdoptanteCreateManyAndReturnArgs>(args?: SelectSubset<T, AdoptanteCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Adoptante.
     * @param {AdoptanteDeleteArgs} args - Arguments to delete one Adoptante.
     * @example
     * // Delete one Adoptante
     * const Adoptante = await prisma.adoptante.delete({
     *   where: {
     *     // ... filter to delete one Adoptante
     *   }
     * })
     * 
     */
    delete<T extends AdoptanteDeleteArgs>(args: SelectSubset<T, AdoptanteDeleteArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Adoptante.
     * @param {AdoptanteUpdateArgs} args - Arguments to update one Adoptante.
     * @example
     * // Update one Adoptante
     * const adoptante = await prisma.adoptante.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AdoptanteUpdateArgs>(args: SelectSubset<T, AdoptanteUpdateArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Adoptantes.
     * @param {AdoptanteDeleteManyArgs} args - Arguments to filter Adoptantes to delete.
     * @example
     * // Delete a few Adoptantes
     * const { count } = await prisma.adoptante.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AdoptanteDeleteManyArgs>(args?: SelectSubset<T, AdoptanteDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Adoptantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Adoptantes
     * const adoptante = await prisma.adoptante.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AdoptanteUpdateManyArgs>(args: SelectSubset<T, AdoptanteUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Adoptante.
     * @param {AdoptanteUpsertArgs} args - Arguments to update or create a Adoptante.
     * @example
     * // Update or create a Adoptante
     * const adoptante = await prisma.adoptante.upsert({
     *   create: {
     *     // ... data to create a Adoptante
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Adoptante we want to update
     *   }
     * })
     */
    upsert<T extends AdoptanteUpsertArgs>(args: SelectSubset<T, AdoptanteUpsertArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Adoptantes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteCountArgs} args - Arguments to filter Adoptantes to count.
     * @example
     * // Count the number of Adoptantes
     * const count = await prisma.adoptante.count({
     *   where: {
     *     // ... the filter for the Adoptantes we want to count
     *   }
     * })
    **/
    count<T extends AdoptanteCountArgs>(
      args?: Subset<T, AdoptanteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AdoptanteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Adoptante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AdoptanteAggregateArgs>(args: Subset<T, AdoptanteAggregateArgs>): Prisma.PrismaPromise<GetAdoptanteAggregateType<T>>

    /**
     * Group by Adoptante.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AdoptanteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AdoptanteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AdoptanteGroupByArgs['orderBy'] }
        : { orderBy?: AdoptanteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AdoptanteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdoptanteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Adoptante model
   */
  readonly fields: AdoptanteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Adoptante.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AdoptanteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal_adoptado<T extends Adoptante$animal_adoptadoArgs<ExtArgs> = {}>(args?: Subset<T, Adoptante$animal_adoptadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Adoptante model
   */ 
  interface AdoptanteFieldRefs {
    readonly id: FieldRef<"Adoptante", 'Int'>
    readonly nombre: FieldRef<"Adoptante", 'String'>
    readonly apellido: FieldRef<"Adoptante", 'String'>
    readonly edad: FieldRef<"Adoptante", 'Int'>
    readonly direccion: FieldRef<"Adoptante", 'String'>
    readonly email: FieldRef<"Adoptante", 'String'>
    readonly telefono: FieldRef<"Adoptante", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Adoptante findUnique
   */
  export type AdoptanteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter, which Adoptante to fetch.
     */
    where: AdoptanteWhereUniqueInput
  }

  /**
   * Adoptante findUniqueOrThrow
   */
  export type AdoptanteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter, which Adoptante to fetch.
     */
    where: AdoptanteWhereUniqueInput
  }

  /**
   * Adoptante findFirst
   */
  export type AdoptanteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter, which Adoptante to fetch.
     */
    where?: AdoptanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Adoptantes to fetch.
     */
    orderBy?: AdoptanteOrderByWithRelationInput | AdoptanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Adoptantes.
     */
    cursor?: AdoptanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Adoptantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Adoptantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Adoptantes.
     */
    distinct?: AdoptanteScalarFieldEnum | AdoptanteScalarFieldEnum[]
  }

  /**
   * Adoptante findFirstOrThrow
   */
  export type AdoptanteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter, which Adoptante to fetch.
     */
    where?: AdoptanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Adoptantes to fetch.
     */
    orderBy?: AdoptanteOrderByWithRelationInput | AdoptanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Adoptantes.
     */
    cursor?: AdoptanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Adoptantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Adoptantes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Adoptantes.
     */
    distinct?: AdoptanteScalarFieldEnum | AdoptanteScalarFieldEnum[]
  }

  /**
   * Adoptante findMany
   */
  export type AdoptanteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter, which Adoptantes to fetch.
     */
    where?: AdoptanteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Adoptantes to fetch.
     */
    orderBy?: AdoptanteOrderByWithRelationInput | AdoptanteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Adoptantes.
     */
    cursor?: AdoptanteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Adoptantes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Adoptantes.
     */
    skip?: number
    distinct?: AdoptanteScalarFieldEnum | AdoptanteScalarFieldEnum[]
  }

  /**
   * Adoptante create
   */
  export type AdoptanteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * The data needed to create a Adoptante.
     */
    data: XOR<AdoptanteCreateInput, AdoptanteUncheckedCreateInput>
  }

  /**
   * Adoptante createMany
   */
  export type AdoptanteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Adoptantes.
     */
    data: AdoptanteCreateManyInput | AdoptanteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Adoptante createManyAndReturn
   */
  export type AdoptanteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Adoptantes.
     */
    data: AdoptanteCreateManyInput | AdoptanteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Adoptante update
   */
  export type AdoptanteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * The data needed to update a Adoptante.
     */
    data: XOR<AdoptanteUpdateInput, AdoptanteUncheckedUpdateInput>
    /**
     * Choose, which Adoptante to update.
     */
    where: AdoptanteWhereUniqueInput
  }

  /**
   * Adoptante updateMany
   */
  export type AdoptanteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Adoptantes.
     */
    data: XOR<AdoptanteUpdateManyMutationInput, AdoptanteUncheckedUpdateManyInput>
    /**
     * Filter which Adoptantes to update
     */
    where?: AdoptanteWhereInput
  }

  /**
   * Adoptante upsert
   */
  export type AdoptanteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * The filter to search for the Adoptante to update in case it exists.
     */
    where: AdoptanteWhereUniqueInput
    /**
     * In case the Adoptante found by the `where` argument doesn't exist, create a new Adoptante with this data.
     */
    create: XOR<AdoptanteCreateInput, AdoptanteUncheckedCreateInput>
    /**
     * In case the Adoptante was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AdoptanteUpdateInput, AdoptanteUncheckedUpdateInput>
  }

  /**
   * Adoptante delete
   */
  export type AdoptanteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
    /**
     * Filter which Adoptante to delete.
     */
    where: AdoptanteWhereUniqueInput
  }

  /**
   * Adoptante deleteMany
   */
  export type AdoptanteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Adoptantes to delete
     */
    where?: AdoptanteWhereInput
  }

  /**
   * Adoptante.animal_adoptado
   */
  export type Adoptante$animal_adoptadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    where?: animal_adoptadoWhereInput
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    cursor?: animal_adoptadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Animal_adoptadoScalarFieldEnum | Animal_adoptadoScalarFieldEnum[]
  }

  /**
   * Adoptante without action
   */
  export type AdoptanteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Adoptante
     */
    select?: AdoptanteSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AdoptanteInclude<ExtArgs> | null
  }


  /**
   * Model refugio_transito
   */

  export type AggregateRefugio_transito = {
    _count: Refugio_transitoCountAggregateOutputType | null
    _avg: Refugio_transitoAvgAggregateOutputType | null
    _sum: Refugio_transitoSumAggregateOutputType | null
    _min: Refugio_transitoMinAggregateOutputType | null
    _max: Refugio_transitoMaxAggregateOutputType | null
  }

  export type Refugio_transitoAvgAggregateOutputType = {
    id: number | null
    capacidad_maxima: number | null
    telefono: number | null
  }

  export type Refugio_transitoSumAggregateOutputType = {
    id: number | null
    capacidad_maxima: number | null
    telefono: number | null
  }

  export type Refugio_transitoMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
    capacidad_maxima: number | null
    telefono: number | null
    tipo: string | null
  }

  export type Refugio_transitoMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    direccion: string | null
    capacidad_maxima: number | null
    telefono: number | null
    tipo: string | null
  }

  export type Refugio_transitoCountAggregateOutputType = {
    id: number
    nombre: number
    direccion: number
    capacidad_maxima: number
    telefono: number
    tipo: number
    _all: number
  }


  export type Refugio_transitoAvgAggregateInputType = {
    id?: true
    capacidad_maxima?: true
    telefono?: true
  }

  export type Refugio_transitoSumAggregateInputType = {
    id?: true
    capacidad_maxima?: true
    telefono?: true
  }

  export type Refugio_transitoMinAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    capacidad_maxima?: true
    telefono?: true
    tipo?: true
  }

  export type Refugio_transitoMaxAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    capacidad_maxima?: true
    telefono?: true
    tipo?: true
  }

  export type Refugio_transitoCountAggregateInputType = {
    id?: true
    nombre?: true
    direccion?: true
    capacidad_maxima?: true
    telefono?: true
    tipo?: true
    _all?: true
  }

  export type Refugio_transitoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refugio_transito to aggregate.
     */
    where?: refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refugio_transitos to fetch.
     */
    orderBy?: refugio_transitoOrderByWithRelationInput | refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refugio_transitos
    **/
    _count?: true | Refugio_transitoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Refugio_transitoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Refugio_transitoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Refugio_transitoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Refugio_transitoMaxAggregateInputType
  }

  export type GetRefugio_transitoAggregateType<T extends Refugio_transitoAggregateArgs> = {
        [P in keyof T & keyof AggregateRefugio_transito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefugio_transito[P]>
      : GetScalarType<T[P], AggregateRefugio_transito[P]>
  }




  export type refugio_transitoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refugio_transitoWhereInput
    orderBy?: refugio_transitoOrderByWithAggregationInput | refugio_transitoOrderByWithAggregationInput[]
    by: Refugio_transitoScalarFieldEnum[] | Refugio_transitoScalarFieldEnum
    having?: refugio_transitoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Refugio_transitoCountAggregateInputType | true
    _avg?: Refugio_transitoAvgAggregateInputType
    _sum?: Refugio_transitoSumAggregateInputType
    _min?: Refugio_transitoMinAggregateInputType
    _max?: Refugio_transitoMaxAggregateInputType
  }

  export type Refugio_transitoGroupByOutputType = {
    id: number
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
    _count: Refugio_transitoCountAggregateOutputType | null
    _avg: Refugio_transitoAvgAggregateOutputType | null
    _sum: Refugio_transitoSumAggregateOutputType | null
    _min: Refugio_transitoMinAggregateOutputType | null
    _max: Refugio_transitoMaxAggregateOutputType | null
  }

  type GetRefugio_transitoGroupByPayload<T extends refugio_transitoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Refugio_transitoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Refugio_transitoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Refugio_transitoGroupByOutputType[P]>
            : GetScalarType<T[P], Refugio_transitoGroupByOutputType[P]>
        }
      >
    >


  export type refugio_transitoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    capacidad_maxima?: boolean
    telefono?: boolean
    tipo?: boolean
    animal_en_refugio_transito?: boolean | refugio_transito$animal_en_refugio_transitoArgs<ExtArgs>
    _count?: boolean | Refugio_transitoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refugio_transito"]>

  export type refugio_transitoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    capacidad_maxima?: boolean
    telefono?: boolean
    tipo?: boolean
  }, ExtArgs["result"]["refugio_transito"]>

  export type refugio_transitoSelectScalar = {
    id?: boolean
    nombre?: boolean
    direccion?: boolean
    capacidad_maxima?: boolean
    telefono?: boolean
    tipo?: boolean
  }

  export type refugio_transitoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal_en_refugio_transito?: boolean | refugio_transito$animal_en_refugio_transitoArgs<ExtArgs>
    _count?: boolean | Refugio_transitoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type refugio_transitoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $refugio_transitoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refugio_transito"
    objects: {
      animal_en_refugio_transito: Prisma.$animal_en_refugio_transitoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      direccion: string
      capacidad_maxima: number
      telefono: number
      tipo: string
    }, ExtArgs["result"]["refugio_transito"]>
    composites: {}
  }

  type refugio_transitoGetPayload<S extends boolean | null | undefined | refugio_transitoDefaultArgs> = $Result.GetResult<Prisma.$refugio_transitoPayload, S>

  type refugio_transitoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<refugio_transitoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Refugio_transitoCountAggregateInputType | true
    }

  export interface refugio_transitoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refugio_transito'], meta: { name: 'refugio_transito' } }
    /**
     * Find zero or one Refugio_transito that matches the filter.
     * @param {refugio_transitoFindUniqueArgs} args - Arguments to find a Refugio_transito
     * @example
     * // Get one Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends refugio_transitoFindUniqueArgs>(args: SelectSubset<T, refugio_transitoFindUniqueArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Refugio_transito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {refugio_transitoFindUniqueOrThrowArgs} args - Arguments to find a Refugio_transito
     * @example
     * // Get one Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends refugio_transitoFindUniqueOrThrowArgs>(args: SelectSubset<T, refugio_transitoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Refugio_transito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoFindFirstArgs} args - Arguments to find a Refugio_transito
     * @example
     * // Get one Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends refugio_transitoFindFirstArgs>(args?: SelectSubset<T, refugio_transitoFindFirstArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Refugio_transito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoFindFirstOrThrowArgs} args - Arguments to find a Refugio_transito
     * @example
     * // Get one Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends refugio_transitoFindFirstOrThrowArgs>(args?: SelectSubset<T, refugio_transitoFindFirstOrThrowArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Refugio_transitos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refugio_transitos
     * const refugio_transitos = await prisma.refugio_transito.findMany()
     * 
     * // Get first 10 Refugio_transitos
     * const refugio_transitos = await prisma.refugio_transito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refugio_transitoWithIdOnly = await prisma.refugio_transito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends refugio_transitoFindManyArgs>(args?: SelectSubset<T, refugio_transitoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Refugio_transito.
     * @param {refugio_transitoCreateArgs} args - Arguments to create a Refugio_transito.
     * @example
     * // Create one Refugio_transito
     * const Refugio_transito = await prisma.refugio_transito.create({
     *   data: {
     *     // ... data to create a Refugio_transito
     *   }
     * })
     * 
     */
    create<T extends refugio_transitoCreateArgs>(args: SelectSubset<T, refugio_transitoCreateArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Refugio_transitos.
     * @param {refugio_transitoCreateManyArgs} args - Arguments to create many Refugio_transitos.
     * @example
     * // Create many Refugio_transitos
     * const refugio_transito = await prisma.refugio_transito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends refugio_transitoCreateManyArgs>(args?: SelectSubset<T, refugio_transitoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refugio_transitos and returns the data saved in the database.
     * @param {refugio_transitoCreateManyAndReturnArgs} args - Arguments to create many Refugio_transitos.
     * @example
     * // Create many Refugio_transitos
     * const refugio_transito = await prisma.refugio_transito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refugio_transitos and only return the `id`
     * const refugio_transitoWithIdOnly = await prisma.refugio_transito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends refugio_transitoCreateManyAndReturnArgs>(args?: SelectSubset<T, refugio_transitoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Refugio_transito.
     * @param {refugio_transitoDeleteArgs} args - Arguments to delete one Refugio_transito.
     * @example
     * // Delete one Refugio_transito
     * const Refugio_transito = await prisma.refugio_transito.delete({
     *   where: {
     *     // ... filter to delete one Refugio_transito
     *   }
     * })
     * 
     */
    delete<T extends refugio_transitoDeleteArgs>(args: SelectSubset<T, refugio_transitoDeleteArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Refugio_transito.
     * @param {refugio_transitoUpdateArgs} args - Arguments to update one Refugio_transito.
     * @example
     * // Update one Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends refugio_transitoUpdateArgs>(args: SelectSubset<T, refugio_transitoUpdateArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Refugio_transitos.
     * @param {refugio_transitoDeleteManyArgs} args - Arguments to filter Refugio_transitos to delete.
     * @example
     * // Delete a few Refugio_transitos
     * const { count } = await prisma.refugio_transito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends refugio_transitoDeleteManyArgs>(args?: SelectSubset<T, refugio_transitoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refugio_transitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refugio_transitos
     * const refugio_transito = await prisma.refugio_transito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends refugio_transitoUpdateManyArgs>(args: SelectSubset<T, refugio_transitoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Refugio_transito.
     * @param {refugio_transitoUpsertArgs} args - Arguments to update or create a Refugio_transito.
     * @example
     * // Update or create a Refugio_transito
     * const refugio_transito = await prisma.refugio_transito.upsert({
     *   create: {
     *     // ... data to create a Refugio_transito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refugio_transito we want to update
     *   }
     * })
     */
    upsert<T extends refugio_transitoUpsertArgs>(args: SelectSubset<T, refugio_transitoUpsertArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Refugio_transitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoCountArgs} args - Arguments to filter Refugio_transitos to count.
     * @example
     * // Count the number of Refugio_transitos
     * const count = await prisma.refugio_transito.count({
     *   where: {
     *     // ... the filter for the Refugio_transitos we want to count
     *   }
     * })
    **/
    count<T extends refugio_transitoCountArgs>(
      args?: Subset<T, refugio_transitoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Refugio_transitoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refugio_transito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Refugio_transitoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Refugio_transitoAggregateArgs>(args: Subset<T, Refugio_transitoAggregateArgs>): Prisma.PrismaPromise<GetRefugio_transitoAggregateType<T>>

    /**
     * Group by Refugio_transito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refugio_transitoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refugio_transitoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refugio_transitoGroupByArgs['orderBy'] }
        : { orderBy?: refugio_transitoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refugio_transitoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefugio_transitoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refugio_transito model
   */
  readonly fields: refugio_transitoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refugio_transito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refugio_transitoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal_en_refugio_transito<T extends refugio_transito$animal_en_refugio_transitoArgs<ExtArgs> = {}>(args?: Subset<T, refugio_transito$animal_en_refugio_transitoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the refugio_transito model
   */ 
  interface refugio_transitoFieldRefs {
    readonly id: FieldRef<"refugio_transito", 'Int'>
    readonly nombre: FieldRef<"refugio_transito", 'String'>
    readonly direccion: FieldRef<"refugio_transito", 'String'>
    readonly capacidad_maxima: FieldRef<"refugio_transito", 'Int'>
    readonly telefono: FieldRef<"refugio_transito", 'Int'>
    readonly tipo: FieldRef<"refugio_transito", 'String'>
  }
    

  // Custom InputTypes
  /**
   * refugio_transito findUnique
   */
  export type refugio_transitoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which refugio_transito to fetch.
     */
    where: refugio_transitoWhereUniqueInput
  }

  /**
   * refugio_transito findUniqueOrThrow
   */
  export type refugio_transitoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which refugio_transito to fetch.
     */
    where: refugio_transitoWhereUniqueInput
  }

  /**
   * refugio_transito findFirst
   */
  export type refugio_transitoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which refugio_transito to fetch.
     */
    where?: refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refugio_transitos to fetch.
     */
    orderBy?: refugio_transitoOrderByWithRelationInput | refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refugio_transitos.
     */
    cursor?: refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refugio_transitos.
     */
    distinct?: Refugio_transitoScalarFieldEnum | Refugio_transitoScalarFieldEnum[]
  }

  /**
   * refugio_transito findFirstOrThrow
   */
  export type refugio_transitoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which refugio_transito to fetch.
     */
    where?: refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refugio_transitos to fetch.
     */
    orderBy?: refugio_transitoOrderByWithRelationInput | refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refugio_transitos.
     */
    cursor?: refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refugio_transitos.
     */
    distinct?: Refugio_transitoScalarFieldEnum | Refugio_transitoScalarFieldEnum[]
  }

  /**
   * refugio_transito findMany
   */
  export type refugio_transitoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which refugio_transitos to fetch.
     */
    where?: refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refugio_transitos to fetch.
     */
    orderBy?: refugio_transitoOrderByWithRelationInput | refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refugio_transitos.
     */
    cursor?: refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refugio_transitos.
     */
    skip?: number
    distinct?: Refugio_transitoScalarFieldEnum | Refugio_transitoScalarFieldEnum[]
  }

  /**
   * refugio_transito create
   */
  export type refugio_transitoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * The data needed to create a refugio_transito.
     */
    data: XOR<refugio_transitoCreateInput, refugio_transitoUncheckedCreateInput>
  }

  /**
   * refugio_transito createMany
   */
  export type refugio_transitoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refugio_transitos.
     */
    data: refugio_transitoCreateManyInput | refugio_transitoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refugio_transito createManyAndReturn
   */
  export type refugio_transitoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many refugio_transitos.
     */
    data: refugio_transitoCreateManyInput | refugio_transitoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refugio_transito update
   */
  export type refugio_transitoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * The data needed to update a refugio_transito.
     */
    data: XOR<refugio_transitoUpdateInput, refugio_transitoUncheckedUpdateInput>
    /**
     * Choose, which refugio_transito to update.
     */
    where: refugio_transitoWhereUniqueInput
  }

  /**
   * refugio_transito updateMany
   */
  export type refugio_transitoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refugio_transitos.
     */
    data: XOR<refugio_transitoUpdateManyMutationInput, refugio_transitoUncheckedUpdateManyInput>
    /**
     * Filter which refugio_transitos to update
     */
    where?: refugio_transitoWhereInput
  }

  /**
   * refugio_transito upsert
   */
  export type refugio_transitoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * The filter to search for the refugio_transito to update in case it exists.
     */
    where: refugio_transitoWhereUniqueInput
    /**
     * In case the refugio_transito found by the `where` argument doesn't exist, create a new refugio_transito with this data.
     */
    create: XOR<refugio_transitoCreateInput, refugio_transitoUncheckedCreateInput>
    /**
     * In case the refugio_transito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refugio_transitoUpdateInput, refugio_transitoUncheckedUpdateInput>
  }

  /**
   * refugio_transito delete
   */
  export type refugio_transitoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter which refugio_transito to delete.
     */
    where: refugio_transitoWhereUniqueInput
  }

  /**
   * refugio_transito deleteMany
   */
  export type refugio_transitoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refugio_transitos to delete
     */
    where?: refugio_transitoWhereInput
  }

  /**
   * refugio_transito.animal_en_refugio_transito
   */
  export type refugio_transito$animal_en_refugio_transitoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    where?: animal_en_refugio_transitoWhereInput
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Animal_en_refugio_transitoScalarFieldEnum | Animal_en_refugio_transitoScalarFieldEnum[]
  }

  /**
   * refugio_transito without action
   */
  export type refugio_transitoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refugio_transito
     */
    select?: refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refugio_transitoInclude<ExtArgs> | null
  }


  /**
   * Model animal_en_refugio_transito
   */

  export type AggregateAnimal_en_refugio_transito = {
    _count: Animal_en_refugio_transitoCountAggregateOutputType | null
    _avg: Animal_en_refugio_transitoAvgAggregateOutputType | null
    _sum: Animal_en_refugio_transitoSumAggregateOutputType | null
    _min: Animal_en_refugio_transitoMinAggregateOutputType | null
    _max: Animal_en_refugio_transitoMaxAggregateOutputType | null
  }

  export type Animal_en_refugio_transitoAvgAggregateOutputType = {
    id: number | null
    refugio_id: number | null
    animal_id: number | null
  }

  export type Animal_en_refugio_transitoSumAggregateOutputType = {
    id: number | null
    refugio_id: number | null
    animal_id: number | null
  }

  export type Animal_en_refugio_transitoMinAggregateOutputType = {
    id: number | null
    refugio_id: number | null
    animal_id: number | null
  }

  export type Animal_en_refugio_transitoMaxAggregateOutputType = {
    id: number | null
    refugio_id: number | null
    animal_id: number | null
  }

  export type Animal_en_refugio_transitoCountAggregateOutputType = {
    id: number
    refugio_id: number
    animal_id: number
    _all: number
  }


  export type Animal_en_refugio_transitoAvgAggregateInputType = {
    id?: true
    refugio_id?: true
    animal_id?: true
  }

  export type Animal_en_refugio_transitoSumAggregateInputType = {
    id?: true
    refugio_id?: true
    animal_id?: true
  }

  export type Animal_en_refugio_transitoMinAggregateInputType = {
    id?: true
    refugio_id?: true
    animal_id?: true
  }

  export type Animal_en_refugio_transitoMaxAggregateInputType = {
    id?: true
    refugio_id?: true
    animal_id?: true
  }

  export type Animal_en_refugio_transitoCountAggregateInputType = {
    id?: true
    refugio_id?: true
    animal_id?: true
    _all?: true
  }

  export type Animal_en_refugio_transitoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animal_en_refugio_transito to aggregate.
     */
    where?: animal_en_refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_en_refugio_transitos to fetch.
     */
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_en_refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_en_refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned animal_en_refugio_transitos
    **/
    _count?: true | Animal_en_refugio_transitoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Animal_en_refugio_transitoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Animal_en_refugio_transitoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Animal_en_refugio_transitoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Animal_en_refugio_transitoMaxAggregateInputType
  }

  export type GetAnimal_en_refugio_transitoAggregateType<T extends Animal_en_refugio_transitoAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimal_en_refugio_transito]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimal_en_refugio_transito[P]>
      : GetScalarType<T[P], AggregateAnimal_en_refugio_transito[P]>
  }




  export type animal_en_refugio_transitoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_en_refugio_transitoWhereInput
    orderBy?: animal_en_refugio_transitoOrderByWithAggregationInput | animal_en_refugio_transitoOrderByWithAggregationInput[]
    by: Animal_en_refugio_transitoScalarFieldEnum[] | Animal_en_refugio_transitoScalarFieldEnum
    having?: animal_en_refugio_transitoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Animal_en_refugio_transitoCountAggregateInputType | true
    _avg?: Animal_en_refugio_transitoAvgAggregateInputType
    _sum?: Animal_en_refugio_transitoSumAggregateInputType
    _min?: Animal_en_refugio_transitoMinAggregateInputType
    _max?: Animal_en_refugio_transitoMaxAggregateInputType
  }

  export type Animal_en_refugio_transitoGroupByOutputType = {
    id: number
    refugio_id: number
    animal_id: number
    _count: Animal_en_refugio_transitoCountAggregateOutputType | null
    _avg: Animal_en_refugio_transitoAvgAggregateOutputType | null
    _sum: Animal_en_refugio_transitoSumAggregateOutputType | null
    _min: Animal_en_refugio_transitoMinAggregateOutputType | null
    _max: Animal_en_refugio_transitoMaxAggregateOutputType | null
  }

  type GetAnimal_en_refugio_transitoGroupByPayload<T extends animal_en_refugio_transitoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Animal_en_refugio_transitoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Animal_en_refugio_transitoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Animal_en_refugio_transitoGroupByOutputType[P]>
            : GetScalarType<T[P], Animal_en_refugio_transitoGroupByOutputType[P]>
        }
      >
    >


  export type animal_en_refugio_transitoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    refugio_id?: boolean
    animal_id?: boolean
    refugio_transito?: boolean | refugio_transitoDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animal_en_refugio_transito"]>

  export type animal_en_refugio_transitoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    refugio_id?: boolean
    animal_id?: boolean
    refugio_transito?: boolean | refugio_transitoDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animal_en_refugio_transito"]>

  export type animal_en_refugio_transitoSelectScalar = {
    id?: boolean
    refugio_id?: boolean
    animal_id?: boolean
  }

  export type animal_en_refugio_transitoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refugio_transito?: boolean | refugio_transitoDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }
  export type animal_en_refugio_transitoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    refugio_transito?: boolean | refugio_transitoDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }

  export type $animal_en_refugio_transitoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "animal_en_refugio_transito"
    objects: {
      refugio_transito: Prisma.$refugio_transitoPayload<ExtArgs>
      animales: Prisma.$AnimalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      refugio_id: number
      animal_id: number
    }, ExtArgs["result"]["animal_en_refugio_transito"]>
    composites: {}
  }

  type animal_en_refugio_transitoGetPayload<S extends boolean | null | undefined | animal_en_refugio_transitoDefaultArgs> = $Result.GetResult<Prisma.$animal_en_refugio_transitoPayload, S>

  type animal_en_refugio_transitoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<animal_en_refugio_transitoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Animal_en_refugio_transitoCountAggregateInputType | true
    }

  export interface animal_en_refugio_transitoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['animal_en_refugio_transito'], meta: { name: 'animal_en_refugio_transito' } }
    /**
     * Find zero or one Animal_en_refugio_transito that matches the filter.
     * @param {animal_en_refugio_transitoFindUniqueArgs} args - Arguments to find a Animal_en_refugio_transito
     * @example
     * // Get one Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends animal_en_refugio_transitoFindUniqueArgs>(args: SelectSubset<T, animal_en_refugio_transitoFindUniqueArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Animal_en_refugio_transito that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {animal_en_refugio_transitoFindUniqueOrThrowArgs} args - Arguments to find a Animal_en_refugio_transito
     * @example
     * // Get one Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends animal_en_refugio_transitoFindUniqueOrThrowArgs>(args: SelectSubset<T, animal_en_refugio_transitoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Animal_en_refugio_transito that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoFindFirstArgs} args - Arguments to find a Animal_en_refugio_transito
     * @example
     * // Get one Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends animal_en_refugio_transitoFindFirstArgs>(args?: SelectSubset<T, animal_en_refugio_transitoFindFirstArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Animal_en_refugio_transito that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoFindFirstOrThrowArgs} args - Arguments to find a Animal_en_refugio_transito
     * @example
     * // Get one Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends animal_en_refugio_transitoFindFirstOrThrowArgs>(args?: SelectSubset<T, animal_en_refugio_transitoFindFirstOrThrowArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Animal_en_refugio_transitos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Animal_en_refugio_transitos
     * const animal_en_refugio_transitos = await prisma.animal_en_refugio_transito.findMany()
     * 
     * // Get first 10 Animal_en_refugio_transitos
     * const animal_en_refugio_transitos = await prisma.animal_en_refugio_transito.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const animal_en_refugio_transitoWithIdOnly = await prisma.animal_en_refugio_transito.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends animal_en_refugio_transitoFindManyArgs>(args?: SelectSubset<T, animal_en_refugio_transitoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Animal_en_refugio_transito.
     * @param {animal_en_refugio_transitoCreateArgs} args - Arguments to create a Animal_en_refugio_transito.
     * @example
     * // Create one Animal_en_refugio_transito
     * const Animal_en_refugio_transito = await prisma.animal_en_refugio_transito.create({
     *   data: {
     *     // ... data to create a Animal_en_refugio_transito
     *   }
     * })
     * 
     */
    create<T extends animal_en_refugio_transitoCreateArgs>(args: SelectSubset<T, animal_en_refugio_transitoCreateArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Animal_en_refugio_transitos.
     * @param {animal_en_refugio_transitoCreateManyArgs} args - Arguments to create many Animal_en_refugio_transitos.
     * @example
     * // Create many Animal_en_refugio_transitos
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends animal_en_refugio_transitoCreateManyArgs>(args?: SelectSubset<T, animal_en_refugio_transitoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Animal_en_refugio_transitos and returns the data saved in the database.
     * @param {animal_en_refugio_transitoCreateManyAndReturnArgs} args - Arguments to create many Animal_en_refugio_transitos.
     * @example
     * // Create many Animal_en_refugio_transitos
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Animal_en_refugio_transitos and only return the `id`
     * const animal_en_refugio_transitoWithIdOnly = await prisma.animal_en_refugio_transito.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends animal_en_refugio_transitoCreateManyAndReturnArgs>(args?: SelectSubset<T, animal_en_refugio_transitoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Animal_en_refugio_transito.
     * @param {animal_en_refugio_transitoDeleteArgs} args - Arguments to delete one Animal_en_refugio_transito.
     * @example
     * // Delete one Animal_en_refugio_transito
     * const Animal_en_refugio_transito = await prisma.animal_en_refugio_transito.delete({
     *   where: {
     *     // ... filter to delete one Animal_en_refugio_transito
     *   }
     * })
     * 
     */
    delete<T extends animal_en_refugio_transitoDeleteArgs>(args: SelectSubset<T, animal_en_refugio_transitoDeleteArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Animal_en_refugio_transito.
     * @param {animal_en_refugio_transitoUpdateArgs} args - Arguments to update one Animal_en_refugio_transito.
     * @example
     * // Update one Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends animal_en_refugio_transitoUpdateArgs>(args: SelectSubset<T, animal_en_refugio_transitoUpdateArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Animal_en_refugio_transitos.
     * @param {animal_en_refugio_transitoDeleteManyArgs} args - Arguments to filter Animal_en_refugio_transitos to delete.
     * @example
     * // Delete a few Animal_en_refugio_transitos
     * const { count } = await prisma.animal_en_refugio_transito.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends animal_en_refugio_transitoDeleteManyArgs>(args?: SelectSubset<T, animal_en_refugio_transitoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animal_en_refugio_transitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Animal_en_refugio_transitos
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends animal_en_refugio_transitoUpdateManyArgs>(args: SelectSubset<T, animal_en_refugio_transitoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Animal_en_refugio_transito.
     * @param {animal_en_refugio_transitoUpsertArgs} args - Arguments to update or create a Animal_en_refugio_transito.
     * @example
     * // Update or create a Animal_en_refugio_transito
     * const animal_en_refugio_transito = await prisma.animal_en_refugio_transito.upsert({
     *   create: {
     *     // ... data to create a Animal_en_refugio_transito
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Animal_en_refugio_transito we want to update
     *   }
     * })
     */
    upsert<T extends animal_en_refugio_transitoUpsertArgs>(args: SelectSubset<T, animal_en_refugio_transitoUpsertArgs<ExtArgs>>): Prisma__animal_en_refugio_transitoClient<$Result.GetResult<Prisma.$animal_en_refugio_transitoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Animal_en_refugio_transitos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoCountArgs} args - Arguments to filter Animal_en_refugio_transitos to count.
     * @example
     * // Count the number of Animal_en_refugio_transitos
     * const count = await prisma.animal_en_refugio_transito.count({
     *   where: {
     *     // ... the filter for the Animal_en_refugio_transitos we want to count
     *   }
     * })
    **/
    count<T extends animal_en_refugio_transitoCountArgs>(
      args?: Subset<T, animal_en_refugio_transitoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Animal_en_refugio_transitoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Animal_en_refugio_transito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Animal_en_refugio_transitoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Animal_en_refugio_transitoAggregateArgs>(args: Subset<T, Animal_en_refugio_transitoAggregateArgs>): Prisma.PrismaPromise<GetAnimal_en_refugio_transitoAggregateType<T>>

    /**
     * Group by Animal_en_refugio_transito.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_en_refugio_transitoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends animal_en_refugio_transitoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: animal_en_refugio_transitoGroupByArgs['orderBy'] }
        : { orderBy?: animal_en_refugio_transitoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, animal_en_refugio_transitoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimal_en_refugio_transitoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the animal_en_refugio_transito model
   */
  readonly fields: animal_en_refugio_transitoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for animal_en_refugio_transito.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__animal_en_refugio_transitoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    refugio_transito<T extends refugio_transitoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, refugio_transitoDefaultArgs<ExtArgs>>): Prisma__refugio_transitoClient<$Result.GetResult<Prisma.$refugio_transitoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    animales<T extends AnimalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnimalDefaultArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the animal_en_refugio_transito model
   */ 
  interface animal_en_refugio_transitoFieldRefs {
    readonly id: FieldRef<"animal_en_refugio_transito", 'Int'>
    readonly refugio_id: FieldRef<"animal_en_refugio_transito", 'Int'>
    readonly animal_id: FieldRef<"animal_en_refugio_transito", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * animal_en_refugio_transito findUnique
   */
  export type animal_en_refugio_transitoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which animal_en_refugio_transito to fetch.
     */
    where: animal_en_refugio_transitoWhereUniqueInput
  }

  /**
   * animal_en_refugio_transito findUniqueOrThrow
   */
  export type animal_en_refugio_transitoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which animal_en_refugio_transito to fetch.
     */
    where: animal_en_refugio_transitoWhereUniqueInput
  }

  /**
   * animal_en_refugio_transito findFirst
   */
  export type animal_en_refugio_transitoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which animal_en_refugio_transito to fetch.
     */
    where?: animal_en_refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_en_refugio_transitos to fetch.
     */
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animal_en_refugio_transitos.
     */
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_en_refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_en_refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animal_en_refugio_transitos.
     */
    distinct?: Animal_en_refugio_transitoScalarFieldEnum | Animal_en_refugio_transitoScalarFieldEnum[]
  }

  /**
   * animal_en_refugio_transito findFirstOrThrow
   */
  export type animal_en_refugio_transitoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which animal_en_refugio_transito to fetch.
     */
    where?: animal_en_refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_en_refugio_transitos to fetch.
     */
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animal_en_refugio_transitos.
     */
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_en_refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_en_refugio_transitos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animal_en_refugio_transitos.
     */
    distinct?: Animal_en_refugio_transitoScalarFieldEnum | Animal_en_refugio_transitoScalarFieldEnum[]
  }

  /**
   * animal_en_refugio_transito findMany
   */
  export type animal_en_refugio_transitoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter, which animal_en_refugio_transitos to fetch.
     */
    where?: animal_en_refugio_transitoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_en_refugio_transitos to fetch.
     */
    orderBy?: animal_en_refugio_transitoOrderByWithRelationInput | animal_en_refugio_transitoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing animal_en_refugio_transitos.
     */
    cursor?: animal_en_refugio_transitoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_en_refugio_transitos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_en_refugio_transitos.
     */
    skip?: number
    distinct?: Animal_en_refugio_transitoScalarFieldEnum | Animal_en_refugio_transitoScalarFieldEnum[]
  }

  /**
   * animal_en_refugio_transito create
   */
  export type animal_en_refugio_transitoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * The data needed to create a animal_en_refugio_transito.
     */
    data: XOR<animal_en_refugio_transitoCreateInput, animal_en_refugio_transitoUncheckedCreateInput>
  }

  /**
   * animal_en_refugio_transito createMany
   */
  export type animal_en_refugio_transitoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many animal_en_refugio_transitos.
     */
    data: animal_en_refugio_transitoCreateManyInput | animal_en_refugio_transitoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * animal_en_refugio_transito createManyAndReturn
   */
  export type animal_en_refugio_transitoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many animal_en_refugio_transitos.
     */
    data: animal_en_refugio_transitoCreateManyInput | animal_en_refugio_transitoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * animal_en_refugio_transito update
   */
  export type animal_en_refugio_transitoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * The data needed to update a animal_en_refugio_transito.
     */
    data: XOR<animal_en_refugio_transitoUpdateInput, animal_en_refugio_transitoUncheckedUpdateInput>
    /**
     * Choose, which animal_en_refugio_transito to update.
     */
    where: animal_en_refugio_transitoWhereUniqueInput
  }

  /**
   * animal_en_refugio_transito updateMany
   */
  export type animal_en_refugio_transitoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update animal_en_refugio_transitos.
     */
    data: XOR<animal_en_refugio_transitoUpdateManyMutationInput, animal_en_refugio_transitoUncheckedUpdateManyInput>
    /**
     * Filter which animal_en_refugio_transitos to update
     */
    where?: animal_en_refugio_transitoWhereInput
  }

  /**
   * animal_en_refugio_transito upsert
   */
  export type animal_en_refugio_transitoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * The filter to search for the animal_en_refugio_transito to update in case it exists.
     */
    where: animal_en_refugio_transitoWhereUniqueInput
    /**
     * In case the animal_en_refugio_transito found by the `where` argument doesn't exist, create a new animal_en_refugio_transito with this data.
     */
    create: XOR<animal_en_refugio_transitoCreateInput, animal_en_refugio_transitoUncheckedCreateInput>
    /**
     * In case the animal_en_refugio_transito was found with the provided `where` argument, update it with this data.
     */
    update: XOR<animal_en_refugio_transitoUpdateInput, animal_en_refugio_transitoUncheckedUpdateInput>
  }

  /**
   * animal_en_refugio_transito delete
   */
  export type animal_en_refugio_transitoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
    /**
     * Filter which animal_en_refugio_transito to delete.
     */
    where: animal_en_refugio_transitoWhereUniqueInput
  }

  /**
   * animal_en_refugio_transito deleteMany
   */
  export type animal_en_refugio_transitoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animal_en_refugio_transitos to delete
     */
    where?: animal_en_refugio_transitoWhereInput
  }

  /**
   * animal_en_refugio_transito without action
   */
  export type animal_en_refugio_transitoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_en_refugio_transito
     */
    select?: animal_en_refugio_transitoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_en_refugio_transitoInclude<ExtArgs> | null
  }


  /**
   * Model animal_adoptado
   */

  export type AggregateAnimal_adoptado = {
    _count: Animal_adoptadoCountAggregateOutputType | null
    _avg: Animal_adoptadoAvgAggregateOutputType | null
    _sum: Animal_adoptadoSumAggregateOutputType | null
    _min: Animal_adoptadoMinAggregateOutputType | null
    _max: Animal_adoptadoMaxAggregateOutputType | null
  }

  export type Animal_adoptadoAvgAggregateOutputType = {
    id: number | null
    adoptante_id: number | null
    animal_id: number | null
  }

  export type Animal_adoptadoSumAggregateOutputType = {
    id: number | null
    adoptante_id: number | null
    animal_id: number | null
  }

  export type Animal_adoptadoMinAggregateOutputType = {
    id: number | null
    adoptante_id: number | null
    animal_id: number | null
  }

  export type Animal_adoptadoMaxAggregateOutputType = {
    id: number | null
    adoptante_id: number | null
    animal_id: number | null
  }

  export type Animal_adoptadoCountAggregateOutputType = {
    id: number
    adoptante_id: number
    animal_id: number
    _all: number
  }


  export type Animal_adoptadoAvgAggregateInputType = {
    id?: true
    adoptante_id?: true
    animal_id?: true
  }

  export type Animal_adoptadoSumAggregateInputType = {
    id?: true
    adoptante_id?: true
    animal_id?: true
  }

  export type Animal_adoptadoMinAggregateInputType = {
    id?: true
    adoptante_id?: true
    animal_id?: true
  }

  export type Animal_adoptadoMaxAggregateInputType = {
    id?: true
    adoptante_id?: true
    animal_id?: true
  }

  export type Animal_adoptadoCountAggregateInputType = {
    id?: true
    adoptante_id?: true
    animal_id?: true
    _all?: true
  }

  export type Animal_adoptadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animal_adoptado to aggregate.
     */
    where?: animal_adoptadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_adoptados to fetch.
     */
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: animal_adoptadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_adoptados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_adoptados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned animal_adoptados
    **/
    _count?: true | Animal_adoptadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Animal_adoptadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Animal_adoptadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Animal_adoptadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Animal_adoptadoMaxAggregateInputType
  }

  export type GetAnimal_adoptadoAggregateType<T extends Animal_adoptadoAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimal_adoptado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimal_adoptado[P]>
      : GetScalarType<T[P], AggregateAnimal_adoptado[P]>
  }




  export type animal_adoptadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animal_adoptadoWhereInput
    orderBy?: animal_adoptadoOrderByWithAggregationInput | animal_adoptadoOrderByWithAggregationInput[]
    by: Animal_adoptadoScalarFieldEnum[] | Animal_adoptadoScalarFieldEnum
    having?: animal_adoptadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Animal_adoptadoCountAggregateInputType | true
    _avg?: Animal_adoptadoAvgAggregateInputType
    _sum?: Animal_adoptadoSumAggregateInputType
    _min?: Animal_adoptadoMinAggregateInputType
    _max?: Animal_adoptadoMaxAggregateInputType
  }

  export type Animal_adoptadoGroupByOutputType = {
    id: number
    adoptante_id: number
    animal_id: number
    _count: Animal_adoptadoCountAggregateOutputType | null
    _avg: Animal_adoptadoAvgAggregateOutputType | null
    _sum: Animal_adoptadoSumAggregateOutputType | null
    _min: Animal_adoptadoMinAggregateOutputType | null
    _max: Animal_adoptadoMaxAggregateOutputType | null
  }

  type GetAnimal_adoptadoGroupByPayload<T extends animal_adoptadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Animal_adoptadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Animal_adoptadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Animal_adoptadoGroupByOutputType[P]>
            : GetScalarType<T[P], Animal_adoptadoGroupByOutputType[P]>
        }
      >
    >


  export type animal_adoptadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adoptante_id?: boolean
    animal_id?: boolean
    adoptante?: boolean | AdoptanteDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animal_adoptado"]>

  export type animal_adoptadoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    adoptante_id?: boolean
    animal_id?: boolean
    adoptante?: boolean | AdoptanteDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animal_adoptado"]>

  export type animal_adoptadoSelectScalar = {
    id?: boolean
    adoptante_id?: boolean
    animal_id?: boolean
  }

  export type animal_adoptadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adoptante?: boolean | AdoptanteDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }
  export type animal_adoptadoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    adoptante?: boolean | AdoptanteDefaultArgs<ExtArgs>
    animales?: boolean | AnimalDefaultArgs<ExtArgs>
  }

  export type $animal_adoptadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "animal_adoptado"
    objects: {
      adoptante: Prisma.$AdoptantePayload<ExtArgs>
      animales: Prisma.$AnimalPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      adoptante_id: number
      animal_id: number
    }, ExtArgs["result"]["animal_adoptado"]>
    composites: {}
  }

  type animal_adoptadoGetPayload<S extends boolean | null | undefined | animal_adoptadoDefaultArgs> = $Result.GetResult<Prisma.$animal_adoptadoPayload, S>

  type animal_adoptadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<animal_adoptadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Animal_adoptadoCountAggregateInputType | true
    }

  export interface animal_adoptadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['animal_adoptado'], meta: { name: 'animal_adoptado' } }
    /**
     * Find zero or one Animal_adoptado that matches the filter.
     * @param {animal_adoptadoFindUniqueArgs} args - Arguments to find a Animal_adoptado
     * @example
     * // Get one Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends animal_adoptadoFindUniqueArgs>(args: SelectSubset<T, animal_adoptadoFindUniqueArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Animal_adoptado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {animal_adoptadoFindUniqueOrThrowArgs} args - Arguments to find a Animal_adoptado
     * @example
     * // Get one Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends animal_adoptadoFindUniqueOrThrowArgs>(args: SelectSubset<T, animal_adoptadoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Animal_adoptado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoFindFirstArgs} args - Arguments to find a Animal_adoptado
     * @example
     * // Get one Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends animal_adoptadoFindFirstArgs>(args?: SelectSubset<T, animal_adoptadoFindFirstArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Animal_adoptado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoFindFirstOrThrowArgs} args - Arguments to find a Animal_adoptado
     * @example
     * // Get one Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends animal_adoptadoFindFirstOrThrowArgs>(args?: SelectSubset<T, animal_adoptadoFindFirstOrThrowArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Animal_adoptados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Animal_adoptados
     * const animal_adoptados = await prisma.animal_adoptado.findMany()
     * 
     * // Get first 10 Animal_adoptados
     * const animal_adoptados = await prisma.animal_adoptado.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const animal_adoptadoWithIdOnly = await prisma.animal_adoptado.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends animal_adoptadoFindManyArgs>(args?: SelectSubset<T, animal_adoptadoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Animal_adoptado.
     * @param {animal_adoptadoCreateArgs} args - Arguments to create a Animal_adoptado.
     * @example
     * // Create one Animal_adoptado
     * const Animal_adoptado = await prisma.animal_adoptado.create({
     *   data: {
     *     // ... data to create a Animal_adoptado
     *   }
     * })
     * 
     */
    create<T extends animal_adoptadoCreateArgs>(args: SelectSubset<T, animal_adoptadoCreateArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Animal_adoptados.
     * @param {animal_adoptadoCreateManyArgs} args - Arguments to create many Animal_adoptados.
     * @example
     * // Create many Animal_adoptados
     * const animal_adoptado = await prisma.animal_adoptado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends animal_adoptadoCreateManyArgs>(args?: SelectSubset<T, animal_adoptadoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Animal_adoptados and returns the data saved in the database.
     * @param {animal_adoptadoCreateManyAndReturnArgs} args - Arguments to create many Animal_adoptados.
     * @example
     * // Create many Animal_adoptados
     * const animal_adoptado = await prisma.animal_adoptado.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Animal_adoptados and only return the `id`
     * const animal_adoptadoWithIdOnly = await prisma.animal_adoptado.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends animal_adoptadoCreateManyAndReturnArgs>(args?: SelectSubset<T, animal_adoptadoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Animal_adoptado.
     * @param {animal_adoptadoDeleteArgs} args - Arguments to delete one Animal_adoptado.
     * @example
     * // Delete one Animal_adoptado
     * const Animal_adoptado = await prisma.animal_adoptado.delete({
     *   where: {
     *     // ... filter to delete one Animal_adoptado
     *   }
     * })
     * 
     */
    delete<T extends animal_adoptadoDeleteArgs>(args: SelectSubset<T, animal_adoptadoDeleteArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Animal_adoptado.
     * @param {animal_adoptadoUpdateArgs} args - Arguments to update one Animal_adoptado.
     * @example
     * // Update one Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends animal_adoptadoUpdateArgs>(args: SelectSubset<T, animal_adoptadoUpdateArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Animal_adoptados.
     * @param {animal_adoptadoDeleteManyArgs} args - Arguments to filter Animal_adoptados to delete.
     * @example
     * // Delete a few Animal_adoptados
     * const { count } = await prisma.animal_adoptado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends animal_adoptadoDeleteManyArgs>(args?: SelectSubset<T, animal_adoptadoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animal_adoptados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Animal_adoptados
     * const animal_adoptado = await prisma.animal_adoptado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends animal_adoptadoUpdateManyArgs>(args: SelectSubset<T, animal_adoptadoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Animal_adoptado.
     * @param {animal_adoptadoUpsertArgs} args - Arguments to update or create a Animal_adoptado.
     * @example
     * // Update or create a Animal_adoptado
     * const animal_adoptado = await prisma.animal_adoptado.upsert({
     *   create: {
     *     // ... data to create a Animal_adoptado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Animal_adoptado we want to update
     *   }
     * })
     */
    upsert<T extends animal_adoptadoUpsertArgs>(args: SelectSubset<T, animal_adoptadoUpsertArgs<ExtArgs>>): Prisma__animal_adoptadoClient<$Result.GetResult<Prisma.$animal_adoptadoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Animal_adoptados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoCountArgs} args - Arguments to filter Animal_adoptados to count.
     * @example
     * // Count the number of Animal_adoptados
     * const count = await prisma.animal_adoptado.count({
     *   where: {
     *     // ... the filter for the Animal_adoptados we want to count
     *   }
     * })
    **/
    count<T extends animal_adoptadoCountArgs>(
      args?: Subset<T, animal_adoptadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Animal_adoptadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Animal_adoptado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Animal_adoptadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Animal_adoptadoAggregateArgs>(args: Subset<T, Animal_adoptadoAggregateArgs>): Prisma.PrismaPromise<GetAnimal_adoptadoAggregateType<T>>

    /**
     * Group by Animal_adoptado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animal_adoptadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends animal_adoptadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: animal_adoptadoGroupByArgs['orderBy'] }
        : { orderBy?: animal_adoptadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, animal_adoptadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimal_adoptadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the animal_adoptado model
   */
  readonly fields: animal_adoptadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for animal_adoptado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__animal_adoptadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    adoptante<T extends AdoptanteDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AdoptanteDefaultArgs<ExtArgs>>): Prisma__AdoptanteClient<$Result.GetResult<Prisma.$AdoptantePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    animales<T extends AnimalDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AnimalDefaultArgs<ExtArgs>>): Prisma__AnimalClient<$Result.GetResult<Prisma.$AnimalPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the animal_adoptado model
   */ 
  interface animal_adoptadoFieldRefs {
    readonly id: FieldRef<"animal_adoptado", 'Int'>
    readonly adoptante_id: FieldRef<"animal_adoptado", 'Int'>
    readonly animal_id: FieldRef<"animal_adoptado", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * animal_adoptado findUnique
   */
  export type animal_adoptadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter, which animal_adoptado to fetch.
     */
    where: animal_adoptadoWhereUniqueInput
  }

  /**
   * animal_adoptado findUniqueOrThrow
   */
  export type animal_adoptadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter, which animal_adoptado to fetch.
     */
    where: animal_adoptadoWhereUniqueInput
  }

  /**
   * animal_adoptado findFirst
   */
  export type animal_adoptadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter, which animal_adoptado to fetch.
     */
    where?: animal_adoptadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_adoptados to fetch.
     */
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animal_adoptados.
     */
    cursor?: animal_adoptadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_adoptados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_adoptados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animal_adoptados.
     */
    distinct?: Animal_adoptadoScalarFieldEnum | Animal_adoptadoScalarFieldEnum[]
  }

  /**
   * animal_adoptado findFirstOrThrow
   */
  export type animal_adoptadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter, which animal_adoptado to fetch.
     */
    where?: animal_adoptadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_adoptados to fetch.
     */
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animal_adoptados.
     */
    cursor?: animal_adoptadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_adoptados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_adoptados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animal_adoptados.
     */
    distinct?: Animal_adoptadoScalarFieldEnum | Animal_adoptadoScalarFieldEnum[]
  }

  /**
   * animal_adoptado findMany
   */
  export type animal_adoptadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter, which animal_adoptados to fetch.
     */
    where?: animal_adoptadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animal_adoptados to fetch.
     */
    orderBy?: animal_adoptadoOrderByWithRelationInput | animal_adoptadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing animal_adoptados.
     */
    cursor?: animal_adoptadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animal_adoptados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animal_adoptados.
     */
    skip?: number
    distinct?: Animal_adoptadoScalarFieldEnum | Animal_adoptadoScalarFieldEnum[]
  }

  /**
   * animal_adoptado create
   */
  export type animal_adoptadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * The data needed to create a animal_adoptado.
     */
    data: XOR<animal_adoptadoCreateInput, animal_adoptadoUncheckedCreateInput>
  }

  /**
   * animal_adoptado createMany
   */
  export type animal_adoptadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many animal_adoptados.
     */
    data: animal_adoptadoCreateManyInput | animal_adoptadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * animal_adoptado createManyAndReturn
   */
  export type animal_adoptadoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many animal_adoptados.
     */
    data: animal_adoptadoCreateManyInput | animal_adoptadoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * animal_adoptado update
   */
  export type animal_adoptadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * The data needed to update a animal_adoptado.
     */
    data: XOR<animal_adoptadoUpdateInput, animal_adoptadoUncheckedUpdateInput>
    /**
     * Choose, which animal_adoptado to update.
     */
    where: animal_adoptadoWhereUniqueInput
  }

  /**
   * animal_adoptado updateMany
   */
  export type animal_adoptadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update animal_adoptados.
     */
    data: XOR<animal_adoptadoUpdateManyMutationInput, animal_adoptadoUncheckedUpdateManyInput>
    /**
     * Filter which animal_adoptados to update
     */
    where?: animal_adoptadoWhereInput
  }

  /**
   * animal_adoptado upsert
   */
  export type animal_adoptadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * The filter to search for the animal_adoptado to update in case it exists.
     */
    where: animal_adoptadoWhereUniqueInput
    /**
     * In case the animal_adoptado found by the `where` argument doesn't exist, create a new animal_adoptado with this data.
     */
    create: XOR<animal_adoptadoCreateInput, animal_adoptadoUncheckedCreateInput>
    /**
     * In case the animal_adoptado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<animal_adoptadoUpdateInput, animal_adoptadoUncheckedUpdateInput>
  }

  /**
   * animal_adoptado delete
   */
  export type animal_adoptadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
    /**
     * Filter which animal_adoptado to delete.
     */
    where: animal_adoptadoWhereUniqueInput
  }

  /**
   * animal_adoptado deleteMany
   */
  export type animal_adoptadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animal_adoptados to delete
     */
    where?: animal_adoptadoWhereInput
  }

  /**
   * animal_adoptado without action
   */
  export type animal_adoptadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animal_adoptado
     */
    select?: animal_adoptadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animal_adoptadoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AnimalScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    sexo: 'sexo',
    especie: 'especie',
    edad: 'edad',
    raza: 'raza'
  };

  export type AnimalScalarFieldEnum = (typeof AnimalScalarFieldEnum)[keyof typeof AnimalScalarFieldEnum]


  export const AdoptanteScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    edad: 'edad',
    direccion: 'direccion',
    email: 'email',
    telefono: 'telefono'
  };

  export type AdoptanteScalarFieldEnum = (typeof AdoptanteScalarFieldEnum)[keyof typeof AdoptanteScalarFieldEnum]


  export const Refugio_transitoScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    direccion: 'direccion',
    capacidad_maxima: 'capacidad_maxima',
    telefono: 'telefono',
    tipo: 'tipo'
  };

  export type Refugio_transitoScalarFieldEnum = (typeof Refugio_transitoScalarFieldEnum)[keyof typeof Refugio_transitoScalarFieldEnum]


  export const Animal_en_refugio_transitoScalarFieldEnum: {
    id: 'id',
    refugio_id: 'refugio_id',
    animal_id: 'animal_id'
  };

  export type Animal_en_refugio_transitoScalarFieldEnum = (typeof Animal_en_refugio_transitoScalarFieldEnum)[keyof typeof Animal_en_refugio_transitoScalarFieldEnum]


  export const Animal_adoptadoScalarFieldEnum: {
    id: 'id',
    adoptante_id: 'adoptante_id',
    animal_id: 'animal_id'
  };

  export type Animal_adoptadoScalarFieldEnum = (typeof Animal_adoptadoScalarFieldEnum)[keyof typeof Animal_adoptadoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type AnimalWhereInput = {
    AND?: AnimalWhereInput | AnimalWhereInput[]
    OR?: AnimalWhereInput[]
    NOT?: AnimalWhereInput | AnimalWhereInput[]
    id?: IntFilter<"Animal"> | number
    nombre?: StringFilter<"Animal"> | string
    sexo?: StringFilter<"Animal"> | string
    especie?: StringFilter<"Animal"> | string
    edad?: IntFilter<"Animal"> | number
    raza?: StringFilter<"Animal"> | string
    animal_en_refugio_transito?: Animal_en_refugio_transitoListRelationFilter
    animal_adoptado?: Animal_adoptadoListRelationFilter
  }

  export type AnimalOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    sexo?: SortOrder
    especie?: SortOrder
    edad?: SortOrder
    raza?: SortOrder
    animal_en_refugio_transito?: animal_en_refugio_transitoOrderByRelationAggregateInput
    animal_adoptado?: animal_adoptadoOrderByRelationAggregateInput
  }

  export type AnimalWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: AnimalWhereInput | AnimalWhereInput[]
    OR?: AnimalWhereInput[]
    NOT?: AnimalWhereInput | AnimalWhereInput[]
    nombre?: StringFilter<"Animal"> | string
    sexo?: StringFilter<"Animal"> | string
    especie?: StringFilter<"Animal"> | string
    edad?: IntFilter<"Animal"> | number
    raza?: StringFilter<"Animal"> | string
    animal_en_refugio_transito?: Animal_en_refugio_transitoListRelationFilter
    animal_adoptado?: Animal_adoptadoListRelationFilter
  }, "id">

  export type AnimalOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    sexo?: SortOrder
    especie?: SortOrder
    edad?: SortOrder
    raza?: SortOrder
    _count?: AnimalCountOrderByAggregateInput
    _avg?: AnimalAvgOrderByAggregateInput
    _max?: AnimalMaxOrderByAggregateInput
    _min?: AnimalMinOrderByAggregateInput
    _sum?: AnimalSumOrderByAggregateInput
  }

  export type AnimalScalarWhereWithAggregatesInput = {
    AND?: AnimalScalarWhereWithAggregatesInput | AnimalScalarWhereWithAggregatesInput[]
    OR?: AnimalScalarWhereWithAggregatesInput[]
    NOT?: AnimalScalarWhereWithAggregatesInput | AnimalScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Animal"> | number
    nombre?: StringWithAggregatesFilter<"Animal"> | string
    sexo?: StringWithAggregatesFilter<"Animal"> | string
    especie?: StringWithAggregatesFilter<"Animal"> | string
    edad?: IntWithAggregatesFilter<"Animal"> | number
    raza?: StringWithAggregatesFilter<"Animal"> | string
  }

  export type AdoptanteWhereInput = {
    AND?: AdoptanteWhereInput | AdoptanteWhereInput[]
    OR?: AdoptanteWhereInput[]
    NOT?: AdoptanteWhereInput | AdoptanteWhereInput[]
    id?: IntFilter<"Adoptante"> | number
    nombre?: StringFilter<"Adoptante"> | string
    apellido?: StringFilter<"Adoptante"> | string
    edad?: IntFilter<"Adoptante"> | number
    direccion?: StringFilter<"Adoptante"> | string
    email?: StringFilter<"Adoptante"> | string
    telefono?: IntFilter<"Adoptante"> | number
    animal_adoptado?: Animal_adoptadoListRelationFilter
  }

  export type AdoptanteOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    edad?: SortOrder
    direccion?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    animal_adoptado?: animal_adoptadoOrderByRelationAggregateInput
  }

  export type AdoptanteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    telefono?: number
    AND?: AdoptanteWhereInput | AdoptanteWhereInput[]
    OR?: AdoptanteWhereInput[]
    NOT?: AdoptanteWhereInput | AdoptanteWhereInput[]
    nombre?: StringFilter<"Adoptante"> | string
    apellido?: StringFilter<"Adoptante"> | string
    edad?: IntFilter<"Adoptante"> | number
    direccion?: StringFilter<"Adoptante"> | string
    animal_adoptado?: Animal_adoptadoListRelationFilter
  }, "id" | "email" | "telefono">

  export type AdoptanteOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    edad?: SortOrder
    direccion?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    _count?: AdoptanteCountOrderByAggregateInput
    _avg?: AdoptanteAvgOrderByAggregateInput
    _max?: AdoptanteMaxOrderByAggregateInput
    _min?: AdoptanteMinOrderByAggregateInput
    _sum?: AdoptanteSumOrderByAggregateInput
  }

  export type AdoptanteScalarWhereWithAggregatesInput = {
    AND?: AdoptanteScalarWhereWithAggregatesInput | AdoptanteScalarWhereWithAggregatesInput[]
    OR?: AdoptanteScalarWhereWithAggregatesInput[]
    NOT?: AdoptanteScalarWhereWithAggregatesInput | AdoptanteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Adoptante"> | number
    nombre?: StringWithAggregatesFilter<"Adoptante"> | string
    apellido?: StringWithAggregatesFilter<"Adoptante"> | string
    edad?: IntWithAggregatesFilter<"Adoptante"> | number
    direccion?: StringWithAggregatesFilter<"Adoptante"> | string
    email?: StringWithAggregatesFilter<"Adoptante"> | string
    telefono?: IntWithAggregatesFilter<"Adoptante"> | number
  }

  export type refugio_transitoWhereInput = {
    AND?: refugio_transitoWhereInput | refugio_transitoWhereInput[]
    OR?: refugio_transitoWhereInput[]
    NOT?: refugio_transitoWhereInput | refugio_transitoWhereInput[]
    id?: IntFilter<"refugio_transito"> | number
    nombre?: StringFilter<"refugio_transito"> | string
    direccion?: StringFilter<"refugio_transito"> | string
    capacidad_maxima?: IntFilter<"refugio_transito"> | number
    telefono?: IntFilter<"refugio_transito"> | number
    tipo?: StringFilter<"refugio_transito"> | string
    animal_en_refugio_transito?: Animal_en_refugio_transitoListRelationFilter
  }

  export type refugio_transitoOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
    tipo?: SortOrder
    animal_en_refugio_transito?: animal_en_refugio_transitoOrderByRelationAggregateInput
  }

  export type refugio_transitoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    telefono?: number
    AND?: refugio_transitoWhereInput | refugio_transitoWhereInput[]
    OR?: refugio_transitoWhereInput[]
    NOT?: refugio_transitoWhereInput | refugio_transitoWhereInput[]
    direccion?: StringFilter<"refugio_transito"> | string
    capacidad_maxima?: IntFilter<"refugio_transito"> | number
    tipo?: StringFilter<"refugio_transito"> | string
    animal_en_refugio_transito?: Animal_en_refugio_transitoListRelationFilter
  }, "id" | "nombre" | "telefono">

  export type refugio_transitoOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
    tipo?: SortOrder
    _count?: refugio_transitoCountOrderByAggregateInput
    _avg?: refugio_transitoAvgOrderByAggregateInput
    _max?: refugio_transitoMaxOrderByAggregateInput
    _min?: refugio_transitoMinOrderByAggregateInput
    _sum?: refugio_transitoSumOrderByAggregateInput
  }

  export type refugio_transitoScalarWhereWithAggregatesInput = {
    AND?: refugio_transitoScalarWhereWithAggregatesInput | refugio_transitoScalarWhereWithAggregatesInput[]
    OR?: refugio_transitoScalarWhereWithAggregatesInput[]
    NOT?: refugio_transitoScalarWhereWithAggregatesInput | refugio_transitoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"refugio_transito"> | number
    nombre?: StringWithAggregatesFilter<"refugio_transito"> | string
    direccion?: StringWithAggregatesFilter<"refugio_transito"> | string
    capacidad_maxima?: IntWithAggregatesFilter<"refugio_transito"> | number
    telefono?: IntWithAggregatesFilter<"refugio_transito"> | number
    tipo?: StringWithAggregatesFilter<"refugio_transito"> | string
  }

  export type animal_en_refugio_transitoWhereInput = {
    AND?: animal_en_refugio_transitoWhereInput | animal_en_refugio_transitoWhereInput[]
    OR?: animal_en_refugio_transitoWhereInput[]
    NOT?: animal_en_refugio_transitoWhereInput | animal_en_refugio_transitoWhereInput[]
    id?: IntFilter<"animal_en_refugio_transito"> | number
    refugio_id?: IntFilter<"animal_en_refugio_transito"> | number
    animal_id?: IntFilter<"animal_en_refugio_transito"> | number
    refugio_transito?: XOR<Refugio_transitoScalarRelationFilter, refugio_transitoWhereInput>
    animales?: XOR<AnimalScalarRelationFilter, AnimalWhereInput>
  }

  export type animal_en_refugio_transitoOrderByWithRelationInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
    refugio_transito?: refugio_transitoOrderByWithRelationInput
    animales?: AnimalOrderByWithRelationInput
  }

  export type animal_en_refugio_transitoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: animal_en_refugio_transitoWhereInput | animal_en_refugio_transitoWhereInput[]
    OR?: animal_en_refugio_transitoWhereInput[]
    NOT?: animal_en_refugio_transitoWhereInput | animal_en_refugio_transitoWhereInput[]
    refugio_id?: IntFilter<"animal_en_refugio_transito"> | number
    animal_id?: IntFilter<"animal_en_refugio_transito"> | number
    refugio_transito?: XOR<Refugio_transitoScalarRelationFilter, refugio_transitoWhereInput>
    animales?: XOR<AnimalScalarRelationFilter, AnimalWhereInput>
  }, "id">

  export type animal_en_refugio_transitoOrderByWithAggregationInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
    _count?: animal_en_refugio_transitoCountOrderByAggregateInput
    _avg?: animal_en_refugio_transitoAvgOrderByAggregateInput
    _max?: animal_en_refugio_transitoMaxOrderByAggregateInput
    _min?: animal_en_refugio_transitoMinOrderByAggregateInput
    _sum?: animal_en_refugio_transitoSumOrderByAggregateInput
  }

  export type animal_en_refugio_transitoScalarWhereWithAggregatesInput = {
    AND?: animal_en_refugio_transitoScalarWhereWithAggregatesInput | animal_en_refugio_transitoScalarWhereWithAggregatesInput[]
    OR?: animal_en_refugio_transitoScalarWhereWithAggregatesInput[]
    NOT?: animal_en_refugio_transitoScalarWhereWithAggregatesInput | animal_en_refugio_transitoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"animal_en_refugio_transito"> | number
    refugio_id?: IntWithAggregatesFilter<"animal_en_refugio_transito"> | number
    animal_id?: IntWithAggregatesFilter<"animal_en_refugio_transito"> | number
  }

  export type animal_adoptadoWhereInput = {
    AND?: animal_adoptadoWhereInput | animal_adoptadoWhereInput[]
    OR?: animal_adoptadoWhereInput[]
    NOT?: animal_adoptadoWhereInput | animal_adoptadoWhereInput[]
    id?: IntFilter<"animal_adoptado"> | number
    adoptante_id?: IntFilter<"animal_adoptado"> | number
    animal_id?: IntFilter<"animal_adoptado"> | number
    adoptante?: XOR<AdoptanteScalarRelationFilter, AdoptanteWhereInput>
    animales?: XOR<AnimalScalarRelationFilter, AnimalWhereInput>
  }

  export type animal_adoptadoOrderByWithRelationInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
    adoptante?: AdoptanteOrderByWithRelationInput
    animales?: AnimalOrderByWithRelationInput
  }

  export type animal_adoptadoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: animal_adoptadoWhereInput | animal_adoptadoWhereInput[]
    OR?: animal_adoptadoWhereInput[]
    NOT?: animal_adoptadoWhereInput | animal_adoptadoWhereInput[]
    adoptante_id?: IntFilter<"animal_adoptado"> | number
    animal_id?: IntFilter<"animal_adoptado"> | number
    adoptante?: XOR<AdoptanteScalarRelationFilter, AdoptanteWhereInput>
    animales?: XOR<AnimalScalarRelationFilter, AnimalWhereInput>
  }, "id">

  export type animal_adoptadoOrderByWithAggregationInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
    _count?: animal_adoptadoCountOrderByAggregateInput
    _avg?: animal_adoptadoAvgOrderByAggregateInput
    _max?: animal_adoptadoMaxOrderByAggregateInput
    _min?: animal_adoptadoMinOrderByAggregateInput
    _sum?: animal_adoptadoSumOrderByAggregateInput
  }

  export type animal_adoptadoScalarWhereWithAggregatesInput = {
    AND?: animal_adoptadoScalarWhereWithAggregatesInput | animal_adoptadoScalarWhereWithAggregatesInput[]
    OR?: animal_adoptadoScalarWhereWithAggregatesInput[]
    NOT?: animal_adoptadoScalarWhereWithAggregatesInput | animal_adoptadoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"animal_adoptado"> | number
    adoptante_id?: IntWithAggregatesFilter<"animal_adoptado"> | number
    animal_id?: IntWithAggregatesFilter<"animal_adoptado"> | number
  }

  export type AnimalCreateInput = {
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_en_refugio_transito?: animal_en_refugio_transitoCreateNestedManyWithoutAnimalesInput
    animal_adoptado?: animal_adoptadoCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalUncheckedCreateInput = {
    id?: number
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedCreateNestedManyWithoutAnimalesInput
    animal_adoptado?: animal_adoptadoUncheckedCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUpdateManyWithoutAnimalesNestedInput
    animal_adoptado?: animal_adoptadoUpdateManyWithoutAnimalesNestedInput
  }

  export type AnimalUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedUpdateManyWithoutAnimalesNestedInput
    animal_adoptado?: animal_adoptadoUncheckedUpdateManyWithoutAnimalesNestedInput
  }

  export type AnimalCreateManyInput = {
    id?: number
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
  }

  export type AnimalUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
  }

  export type AnimalUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
  }

  export type AdoptanteCreateInput = {
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
    animal_adoptado?: animal_adoptadoCreateNestedManyWithoutAdoptanteInput
  }

  export type AdoptanteUncheckedCreateInput = {
    id?: number
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
    animal_adoptado?: animal_adoptadoUncheckedCreateNestedManyWithoutAdoptanteInput
  }

  export type AdoptanteUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    animal_adoptado?: animal_adoptadoUpdateManyWithoutAdoptanteNestedInput
  }

  export type AdoptanteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
    animal_adoptado?: animal_adoptadoUncheckedUpdateManyWithoutAdoptanteNestedInput
  }

  export type AdoptanteCreateManyInput = {
    id?: number
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
  }

  export type AdoptanteUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
  }

  export type AdoptanteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
  }

  export type refugio_transitoCreateInput = {
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
    animal_en_refugio_transito?: animal_en_refugio_transitoCreateNestedManyWithoutRefugio_transitoInput
  }

  export type refugio_transitoUncheckedCreateInput = {
    id?: number
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedCreateNestedManyWithoutRefugio_transitoInput
  }

  export type refugio_transitoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUpdateManyWithoutRefugio_transitoNestedInput
  }

  export type refugio_transitoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedUpdateManyWithoutRefugio_transitoNestedInput
  }

  export type refugio_transitoCreateManyInput = {
    id?: number
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
  }

  export type refugio_transitoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type refugio_transitoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type animal_en_refugio_transitoCreateInput = {
    refugio_transito: refugio_transitoCreateNestedOneWithoutAnimal_en_refugio_transitoInput
    animales: AnimalCreateNestedOneWithoutAnimal_en_refugio_transitoInput
  }

  export type animal_en_refugio_transitoUncheckedCreateInput = {
    id?: number
    refugio_id: number
    animal_id: number
  }

  export type animal_en_refugio_transitoUpdateInput = {
    refugio_transito?: refugio_transitoUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput
    animales?: AnimalUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput
  }

  export type animal_en_refugio_transitoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    refugio_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_en_refugio_transitoCreateManyInput = {
    id?: number
    refugio_id: number
    animal_id: number
  }

  export type animal_en_refugio_transitoUpdateManyMutationInput = {

  }

  export type animal_en_refugio_transitoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    refugio_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoCreateInput = {
    adoptante: AdoptanteCreateNestedOneWithoutAnimal_adoptadoInput
    animales: AnimalCreateNestedOneWithoutAnimal_adoptadoInput
  }

  export type animal_adoptadoUncheckedCreateInput = {
    id?: number
    adoptante_id: number
    animal_id: number
  }

  export type animal_adoptadoUpdateInput = {
    adoptante?: AdoptanteUpdateOneRequiredWithoutAnimal_adoptadoNestedInput
    animales?: AnimalUpdateOneRequiredWithoutAnimal_adoptadoNestedInput
  }

  export type animal_adoptadoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    adoptante_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoCreateManyInput = {
    id?: number
    adoptante_id: number
    animal_id: number
  }

  export type animal_adoptadoUpdateManyMutationInput = {

  }

  export type animal_adoptadoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    adoptante_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type Animal_en_refugio_transitoListRelationFilter = {
    every?: animal_en_refugio_transitoWhereInput
    some?: animal_en_refugio_transitoWhereInput
    none?: animal_en_refugio_transitoWhereInput
  }

  export type Animal_adoptadoListRelationFilter = {
    every?: animal_adoptadoWhereInput
    some?: animal_adoptadoWhereInput
    none?: animal_adoptadoWhereInput
  }

  export type animal_en_refugio_transitoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type animal_adoptadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AnimalCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    sexo?: SortOrder
    especie?: SortOrder
    edad?: SortOrder
    raza?: SortOrder
  }

  export type AnimalAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type AnimalMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    sexo?: SortOrder
    especie?: SortOrder
    edad?: SortOrder
    raza?: SortOrder
  }

  export type AnimalMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    sexo?: SortOrder
    especie?: SortOrder
    edad?: SortOrder
    raza?: SortOrder
  }

  export type AnimalSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type AdoptanteCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    edad?: SortOrder
    direccion?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
  }

  export type AdoptanteAvgOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    telefono?: SortOrder
  }

  export type AdoptanteMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    edad?: SortOrder
    direccion?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
  }

  export type AdoptanteMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    edad?: SortOrder
    direccion?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
  }

  export type AdoptanteSumOrderByAggregateInput = {
    id?: SortOrder
    edad?: SortOrder
    telefono?: SortOrder
  }

  export type refugio_transitoCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
    tipo?: SortOrder
  }

  export type refugio_transitoAvgOrderByAggregateInput = {
    id?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
  }

  export type refugio_transitoMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
    tipo?: SortOrder
  }

  export type refugio_transitoMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    direccion?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
    tipo?: SortOrder
  }

  export type refugio_transitoSumOrderByAggregateInput = {
    id?: SortOrder
    capacidad_maxima?: SortOrder
    telefono?: SortOrder
  }

  export type Refugio_transitoScalarRelationFilter = {
    is?: refugio_transitoWhereInput
    isNot?: refugio_transitoWhereInput
  }

  export type AnimalScalarRelationFilter = {
    is?: AnimalWhereInput
    isNot?: AnimalWhereInput
  }

  export type animal_en_refugio_transitoCountOrderByAggregateInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_en_refugio_transitoAvgOrderByAggregateInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_en_refugio_transitoMaxOrderByAggregateInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_en_refugio_transitoMinOrderByAggregateInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_en_refugio_transitoSumOrderByAggregateInput = {
    id?: SortOrder
    refugio_id?: SortOrder
    animal_id?: SortOrder
  }

  export type AdoptanteScalarRelationFilter = {
    is?: AdoptanteWhereInput
    isNot?: AdoptanteWhereInput
  }

  export type animal_adoptadoCountOrderByAggregateInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_adoptadoAvgOrderByAggregateInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_adoptadoMaxOrderByAggregateInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_adoptadoMinOrderByAggregateInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_adoptadoSumOrderByAggregateInput = {
    id?: SortOrder
    adoptante_id?: SortOrder
    animal_id?: SortOrder
  }

  export type animal_en_refugio_transitoCreateNestedManyWithoutAnimalesInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput> | animal_en_refugio_transitoCreateWithoutAnimalesInput[] | animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput | animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput[]
    createMany?: animal_en_refugio_transitoCreateManyAnimalesInputEnvelope
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
  }

  export type animal_adoptadoCreateNestedManyWithoutAnimalesInput = {
    create?: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput> | animal_adoptadoCreateWithoutAnimalesInput[] | animal_adoptadoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAnimalesInput | animal_adoptadoCreateOrConnectWithoutAnimalesInput[]
    createMany?: animal_adoptadoCreateManyAnimalesInputEnvelope
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
  }

  export type animal_en_refugio_transitoUncheckedCreateNestedManyWithoutAnimalesInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput> | animal_en_refugio_transitoCreateWithoutAnimalesInput[] | animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput | animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput[]
    createMany?: animal_en_refugio_transitoCreateManyAnimalesInputEnvelope
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
  }

  export type animal_adoptadoUncheckedCreateNestedManyWithoutAnimalesInput = {
    create?: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput> | animal_adoptadoCreateWithoutAnimalesInput[] | animal_adoptadoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAnimalesInput | animal_adoptadoCreateOrConnectWithoutAnimalesInput[]
    createMany?: animal_adoptadoCreateManyAnimalesInputEnvelope
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type animal_en_refugio_transitoUpdateManyWithoutAnimalesNestedInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput> | animal_en_refugio_transitoCreateWithoutAnimalesInput[] | animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput | animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput[]
    upsert?: animal_en_refugio_transitoUpsertWithWhereUniqueWithoutAnimalesInput | animal_en_refugio_transitoUpsertWithWhereUniqueWithoutAnimalesInput[]
    createMany?: animal_en_refugio_transitoCreateManyAnimalesInputEnvelope
    set?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    disconnect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    delete?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    update?: animal_en_refugio_transitoUpdateWithWhereUniqueWithoutAnimalesInput | animal_en_refugio_transitoUpdateWithWhereUniqueWithoutAnimalesInput[]
    updateMany?: animal_en_refugio_transitoUpdateManyWithWhereWithoutAnimalesInput | animal_en_refugio_transitoUpdateManyWithWhereWithoutAnimalesInput[]
    deleteMany?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
  }

  export type animal_adoptadoUpdateManyWithoutAnimalesNestedInput = {
    create?: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput> | animal_adoptadoCreateWithoutAnimalesInput[] | animal_adoptadoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAnimalesInput | animal_adoptadoCreateOrConnectWithoutAnimalesInput[]
    upsert?: animal_adoptadoUpsertWithWhereUniqueWithoutAnimalesInput | animal_adoptadoUpsertWithWhereUniqueWithoutAnimalesInput[]
    createMany?: animal_adoptadoCreateManyAnimalesInputEnvelope
    set?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    disconnect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    delete?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    update?: animal_adoptadoUpdateWithWhereUniqueWithoutAnimalesInput | animal_adoptadoUpdateWithWhereUniqueWithoutAnimalesInput[]
    updateMany?: animal_adoptadoUpdateManyWithWhereWithoutAnimalesInput | animal_adoptadoUpdateManyWithWhereWithoutAnimalesInput[]
    deleteMany?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
  }

  export type animal_en_refugio_transitoUncheckedUpdateManyWithoutAnimalesNestedInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput> | animal_en_refugio_transitoCreateWithoutAnimalesInput[] | animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput | animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput[]
    upsert?: animal_en_refugio_transitoUpsertWithWhereUniqueWithoutAnimalesInput | animal_en_refugio_transitoUpsertWithWhereUniqueWithoutAnimalesInput[]
    createMany?: animal_en_refugio_transitoCreateManyAnimalesInputEnvelope
    set?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    disconnect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    delete?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    update?: animal_en_refugio_transitoUpdateWithWhereUniqueWithoutAnimalesInput | animal_en_refugio_transitoUpdateWithWhereUniqueWithoutAnimalesInput[]
    updateMany?: animal_en_refugio_transitoUpdateManyWithWhereWithoutAnimalesInput | animal_en_refugio_transitoUpdateManyWithWhereWithoutAnimalesInput[]
    deleteMany?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
  }

  export type animal_adoptadoUncheckedUpdateManyWithoutAnimalesNestedInput = {
    create?: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput> | animal_adoptadoCreateWithoutAnimalesInput[] | animal_adoptadoUncheckedCreateWithoutAnimalesInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAnimalesInput | animal_adoptadoCreateOrConnectWithoutAnimalesInput[]
    upsert?: animal_adoptadoUpsertWithWhereUniqueWithoutAnimalesInput | animal_adoptadoUpsertWithWhereUniqueWithoutAnimalesInput[]
    createMany?: animal_adoptadoCreateManyAnimalesInputEnvelope
    set?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    disconnect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    delete?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    update?: animal_adoptadoUpdateWithWhereUniqueWithoutAnimalesInput | animal_adoptadoUpdateWithWhereUniqueWithoutAnimalesInput[]
    updateMany?: animal_adoptadoUpdateManyWithWhereWithoutAnimalesInput | animal_adoptadoUpdateManyWithWhereWithoutAnimalesInput[]
    deleteMany?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
  }

  export type animal_adoptadoCreateNestedManyWithoutAdoptanteInput = {
    create?: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput> | animal_adoptadoCreateWithoutAdoptanteInput[] | animal_adoptadoUncheckedCreateWithoutAdoptanteInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAdoptanteInput | animal_adoptadoCreateOrConnectWithoutAdoptanteInput[]
    createMany?: animal_adoptadoCreateManyAdoptanteInputEnvelope
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
  }

  export type animal_adoptadoUncheckedCreateNestedManyWithoutAdoptanteInput = {
    create?: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput> | animal_adoptadoCreateWithoutAdoptanteInput[] | animal_adoptadoUncheckedCreateWithoutAdoptanteInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAdoptanteInput | animal_adoptadoCreateOrConnectWithoutAdoptanteInput[]
    createMany?: animal_adoptadoCreateManyAdoptanteInputEnvelope
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
  }

  export type animal_adoptadoUpdateManyWithoutAdoptanteNestedInput = {
    create?: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput> | animal_adoptadoCreateWithoutAdoptanteInput[] | animal_adoptadoUncheckedCreateWithoutAdoptanteInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAdoptanteInput | animal_adoptadoCreateOrConnectWithoutAdoptanteInput[]
    upsert?: animal_adoptadoUpsertWithWhereUniqueWithoutAdoptanteInput | animal_adoptadoUpsertWithWhereUniqueWithoutAdoptanteInput[]
    createMany?: animal_adoptadoCreateManyAdoptanteInputEnvelope
    set?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    disconnect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    delete?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    update?: animal_adoptadoUpdateWithWhereUniqueWithoutAdoptanteInput | animal_adoptadoUpdateWithWhereUniqueWithoutAdoptanteInput[]
    updateMany?: animal_adoptadoUpdateManyWithWhereWithoutAdoptanteInput | animal_adoptadoUpdateManyWithWhereWithoutAdoptanteInput[]
    deleteMany?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
  }

  export type animal_adoptadoUncheckedUpdateManyWithoutAdoptanteNestedInput = {
    create?: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput> | animal_adoptadoCreateWithoutAdoptanteInput[] | animal_adoptadoUncheckedCreateWithoutAdoptanteInput[]
    connectOrCreate?: animal_adoptadoCreateOrConnectWithoutAdoptanteInput | animal_adoptadoCreateOrConnectWithoutAdoptanteInput[]
    upsert?: animal_adoptadoUpsertWithWhereUniqueWithoutAdoptanteInput | animal_adoptadoUpsertWithWhereUniqueWithoutAdoptanteInput[]
    createMany?: animal_adoptadoCreateManyAdoptanteInputEnvelope
    set?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    disconnect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    delete?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    connect?: animal_adoptadoWhereUniqueInput | animal_adoptadoWhereUniqueInput[]
    update?: animal_adoptadoUpdateWithWhereUniqueWithoutAdoptanteInput | animal_adoptadoUpdateWithWhereUniqueWithoutAdoptanteInput[]
    updateMany?: animal_adoptadoUpdateManyWithWhereWithoutAdoptanteInput | animal_adoptadoUpdateManyWithWhereWithoutAdoptanteInput[]
    deleteMany?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
  }

  export type animal_en_refugio_transitoCreateNestedManyWithoutRefugio_transitoInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput> | animal_en_refugio_transitoCreateWithoutRefugio_transitoInput[] | animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput | animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput[]
    createMany?: animal_en_refugio_transitoCreateManyRefugio_transitoInputEnvelope
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
  }

  export type animal_en_refugio_transitoUncheckedCreateNestedManyWithoutRefugio_transitoInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput> | animal_en_refugio_transitoCreateWithoutRefugio_transitoInput[] | animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput | animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput[]
    createMany?: animal_en_refugio_transitoCreateManyRefugio_transitoInputEnvelope
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
  }

  export type animal_en_refugio_transitoUpdateManyWithoutRefugio_transitoNestedInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput> | animal_en_refugio_transitoCreateWithoutRefugio_transitoInput[] | animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput | animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput[]
    upsert?: animal_en_refugio_transitoUpsertWithWhereUniqueWithoutRefugio_transitoInput | animal_en_refugio_transitoUpsertWithWhereUniqueWithoutRefugio_transitoInput[]
    createMany?: animal_en_refugio_transitoCreateManyRefugio_transitoInputEnvelope
    set?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    disconnect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    delete?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    update?: animal_en_refugio_transitoUpdateWithWhereUniqueWithoutRefugio_transitoInput | animal_en_refugio_transitoUpdateWithWhereUniqueWithoutRefugio_transitoInput[]
    updateMany?: animal_en_refugio_transitoUpdateManyWithWhereWithoutRefugio_transitoInput | animal_en_refugio_transitoUpdateManyWithWhereWithoutRefugio_transitoInput[]
    deleteMany?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
  }

  export type animal_en_refugio_transitoUncheckedUpdateManyWithoutRefugio_transitoNestedInput = {
    create?: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput> | animal_en_refugio_transitoCreateWithoutRefugio_transitoInput[] | animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput[]
    connectOrCreate?: animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput | animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput[]
    upsert?: animal_en_refugio_transitoUpsertWithWhereUniqueWithoutRefugio_transitoInput | animal_en_refugio_transitoUpsertWithWhereUniqueWithoutRefugio_transitoInput[]
    createMany?: animal_en_refugio_transitoCreateManyRefugio_transitoInputEnvelope
    set?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    disconnect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    delete?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    connect?: animal_en_refugio_transitoWhereUniqueInput | animal_en_refugio_transitoWhereUniqueInput[]
    update?: animal_en_refugio_transitoUpdateWithWhereUniqueWithoutRefugio_transitoInput | animal_en_refugio_transitoUpdateWithWhereUniqueWithoutRefugio_transitoInput[]
    updateMany?: animal_en_refugio_transitoUpdateManyWithWhereWithoutRefugio_transitoInput | animal_en_refugio_transitoUpdateManyWithWhereWithoutRefugio_transitoInput[]
    deleteMany?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
  }

  export type refugio_transitoCreateNestedOneWithoutAnimal_en_refugio_transitoInput = {
    create?: XOR<refugio_transitoCreateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    connectOrCreate?: refugio_transitoCreateOrConnectWithoutAnimal_en_refugio_transitoInput
    connect?: refugio_transitoWhereUniqueInput
  }

  export type AnimalCreateNestedOneWithoutAnimal_en_refugio_transitoInput = {
    create?: XOR<AnimalCreateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    connectOrCreate?: AnimalCreateOrConnectWithoutAnimal_en_refugio_transitoInput
    connect?: AnimalWhereUniqueInput
  }

  export type refugio_transitoUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput = {
    create?: XOR<refugio_transitoCreateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    connectOrCreate?: refugio_transitoCreateOrConnectWithoutAnimal_en_refugio_transitoInput
    upsert?: refugio_transitoUpsertWithoutAnimal_en_refugio_transitoInput
    connect?: refugio_transitoWhereUniqueInput
    update?: XOR<XOR<refugio_transitoUpdateToOneWithWhereWithoutAnimal_en_refugio_transitoInput, refugio_transitoUpdateWithoutAnimal_en_refugio_transitoInput>, refugio_transitoUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
  }

  export type AnimalUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput = {
    create?: XOR<AnimalCreateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    connectOrCreate?: AnimalCreateOrConnectWithoutAnimal_en_refugio_transitoInput
    upsert?: AnimalUpsertWithoutAnimal_en_refugio_transitoInput
    connect?: AnimalWhereUniqueInput
    update?: XOR<XOR<AnimalUpdateToOneWithWhereWithoutAnimal_en_refugio_transitoInput, AnimalUpdateWithoutAnimal_en_refugio_transitoInput>, AnimalUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
  }

  export type AdoptanteCreateNestedOneWithoutAnimal_adoptadoInput = {
    create?: XOR<AdoptanteCreateWithoutAnimal_adoptadoInput, AdoptanteUncheckedCreateWithoutAnimal_adoptadoInput>
    connectOrCreate?: AdoptanteCreateOrConnectWithoutAnimal_adoptadoInput
    connect?: AdoptanteWhereUniqueInput
  }

  export type AnimalCreateNestedOneWithoutAnimal_adoptadoInput = {
    create?: XOR<AnimalCreateWithoutAnimal_adoptadoInput, AnimalUncheckedCreateWithoutAnimal_adoptadoInput>
    connectOrCreate?: AnimalCreateOrConnectWithoutAnimal_adoptadoInput
    connect?: AnimalWhereUniqueInput
  }

  export type AdoptanteUpdateOneRequiredWithoutAnimal_adoptadoNestedInput = {
    create?: XOR<AdoptanteCreateWithoutAnimal_adoptadoInput, AdoptanteUncheckedCreateWithoutAnimal_adoptadoInput>
    connectOrCreate?: AdoptanteCreateOrConnectWithoutAnimal_adoptadoInput
    upsert?: AdoptanteUpsertWithoutAnimal_adoptadoInput
    connect?: AdoptanteWhereUniqueInput
    update?: XOR<XOR<AdoptanteUpdateToOneWithWhereWithoutAnimal_adoptadoInput, AdoptanteUpdateWithoutAnimal_adoptadoInput>, AdoptanteUncheckedUpdateWithoutAnimal_adoptadoInput>
  }

  export type AnimalUpdateOneRequiredWithoutAnimal_adoptadoNestedInput = {
    create?: XOR<AnimalCreateWithoutAnimal_adoptadoInput, AnimalUncheckedCreateWithoutAnimal_adoptadoInput>
    connectOrCreate?: AnimalCreateOrConnectWithoutAnimal_adoptadoInput
    upsert?: AnimalUpsertWithoutAnimal_adoptadoInput
    connect?: AnimalWhereUniqueInput
    update?: XOR<XOR<AnimalUpdateToOneWithWhereWithoutAnimal_adoptadoInput, AnimalUpdateWithoutAnimal_adoptadoInput>, AnimalUncheckedUpdateWithoutAnimal_adoptadoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type animal_en_refugio_transitoCreateWithoutAnimalesInput = {
    refugio_transito: refugio_transitoCreateNestedOneWithoutAnimal_en_refugio_transitoInput
  }

  export type animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput = {
    id?: number
    refugio_id: number
  }

  export type animal_en_refugio_transitoCreateOrConnectWithoutAnimalesInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    create: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput>
  }

  export type animal_en_refugio_transitoCreateManyAnimalesInputEnvelope = {
    data: animal_en_refugio_transitoCreateManyAnimalesInput | animal_en_refugio_transitoCreateManyAnimalesInput[]
    skipDuplicates?: boolean
  }

  export type animal_adoptadoCreateWithoutAnimalesInput = {
    adoptante: AdoptanteCreateNestedOneWithoutAnimal_adoptadoInput
  }

  export type animal_adoptadoUncheckedCreateWithoutAnimalesInput = {
    id?: number
    adoptante_id: number
  }

  export type animal_adoptadoCreateOrConnectWithoutAnimalesInput = {
    where: animal_adoptadoWhereUniqueInput
    create: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput>
  }

  export type animal_adoptadoCreateManyAnimalesInputEnvelope = {
    data: animal_adoptadoCreateManyAnimalesInput | animal_adoptadoCreateManyAnimalesInput[]
    skipDuplicates?: boolean
  }

  export type animal_en_refugio_transitoUpsertWithWhereUniqueWithoutAnimalesInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    update: XOR<animal_en_refugio_transitoUpdateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedUpdateWithoutAnimalesInput>
    create: XOR<animal_en_refugio_transitoCreateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedCreateWithoutAnimalesInput>
  }

  export type animal_en_refugio_transitoUpdateWithWhereUniqueWithoutAnimalesInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    data: XOR<animal_en_refugio_transitoUpdateWithoutAnimalesInput, animal_en_refugio_transitoUncheckedUpdateWithoutAnimalesInput>
  }

  export type animal_en_refugio_transitoUpdateManyWithWhereWithoutAnimalesInput = {
    where: animal_en_refugio_transitoScalarWhereInput
    data: XOR<animal_en_refugio_transitoUpdateManyMutationInput, animal_en_refugio_transitoUncheckedUpdateManyWithoutAnimalesInput>
  }

  export type animal_en_refugio_transitoScalarWhereInput = {
    AND?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
    OR?: animal_en_refugio_transitoScalarWhereInput[]
    NOT?: animal_en_refugio_transitoScalarWhereInput | animal_en_refugio_transitoScalarWhereInput[]
    id?: IntFilter<"animal_en_refugio_transito"> | number
    refugio_id?: IntFilter<"animal_en_refugio_transito"> | number
    animal_id?: IntFilter<"animal_en_refugio_transito"> | number
  }

  export type animal_adoptadoUpsertWithWhereUniqueWithoutAnimalesInput = {
    where: animal_adoptadoWhereUniqueInput
    update: XOR<animal_adoptadoUpdateWithoutAnimalesInput, animal_adoptadoUncheckedUpdateWithoutAnimalesInput>
    create: XOR<animal_adoptadoCreateWithoutAnimalesInput, animal_adoptadoUncheckedCreateWithoutAnimalesInput>
  }

  export type animal_adoptadoUpdateWithWhereUniqueWithoutAnimalesInput = {
    where: animal_adoptadoWhereUniqueInput
    data: XOR<animal_adoptadoUpdateWithoutAnimalesInput, animal_adoptadoUncheckedUpdateWithoutAnimalesInput>
  }

  export type animal_adoptadoUpdateManyWithWhereWithoutAnimalesInput = {
    where: animal_adoptadoScalarWhereInput
    data: XOR<animal_adoptadoUpdateManyMutationInput, animal_adoptadoUncheckedUpdateManyWithoutAnimalesInput>
  }

  export type animal_adoptadoScalarWhereInput = {
    AND?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
    OR?: animal_adoptadoScalarWhereInput[]
    NOT?: animal_adoptadoScalarWhereInput | animal_adoptadoScalarWhereInput[]
    id?: IntFilter<"animal_adoptado"> | number
    adoptante_id?: IntFilter<"animal_adoptado"> | number
    animal_id?: IntFilter<"animal_adoptado"> | number
  }

  export type animal_adoptadoCreateWithoutAdoptanteInput = {
    animales: AnimalCreateNestedOneWithoutAnimal_adoptadoInput
  }

  export type animal_adoptadoUncheckedCreateWithoutAdoptanteInput = {
    id?: number
    animal_id: number
  }

  export type animal_adoptadoCreateOrConnectWithoutAdoptanteInput = {
    where: animal_adoptadoWhereUniqueInput
    create: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput>
  }

  export type animal_adoptadoCreateManyAdoptanteInputEnvelope = {
    data: animal_adoptadoCreateManyAdoptanteInput | animal_adoptadoCreateManyAdoptanteInput[]
    skipDuplicates?: boolean
  }

  export type animal_adoptadoUpsertWithWhereUniqueWithoutAdoptanteInput = {
    where: animal_adoptadoWhereUniqueInput
    update: XOR<animal_adoptadoUpdateWithoutAdoptanteInput, animal_adoptadoUncheckedUpdateWithoutAdoptanteInput>
    create: XOR<animal_adoptadoCreateWithoutAdoptanteInput, animal_adoptadoUncheckedCreateWithoutAdoptanteInput>
  }

  export type animal_adoptadoUpdateWithWhereUniqueWithoutAdoptanteInput = {
    where: animal_adoptadoWhereUniqueInput
    data: XOR<animal_adoptadoUpdateWithoutAdoptanteInput, animal_adoptadoUncheckedUpdateWithoutAdoptanteInput>
  }

  export type animal_adoptadoUpdateManyWithWhereWithoutAdoptanteInput = {
    where: animal_adoptadoScalarWhereInput
    data: XOR<animal_adoptadoUpdateManyMutationInput, animal_adoptadoUncheckedUpdateManyWithoutAdoptanteInput>
  }

  export type animal_en_refugio_transitoCreateWithoutRefugio_transitoInput = {
    animales: AnimalCreateNestedOneWithoutAnimal_en_refugio_transitoInput
  }

  export type animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput = {
    id?: number
    animal_id: number
  }

  export type animal_en_refugio_transitoCreateOrConnectWithoutRefugio_transitoInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    create: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput>
  }

  export type animal_en_refugio_transitoCreateManyRefugio_transitoInputEnvelope = {
    data: animal_en_refugio_transitoCreateManyRefugio_transitoInput | animal_en_refugio_transitoCreateManyRefugio_transitoInput[]
    skipDuplicates?: boolean
  }

  export type animal_en_refugio_transitoUpsertWithWhereUniqueWithoutRefugio_transitoInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    update: XOR<animal_en_refugio_transitoUpdateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedUpdateWithoutRefugio_transitoInput>
    create: XOR<animal_en_refugio_transitoCreateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedCreateWithoutRefugio_transitoInput>
  }

  export type animal_en_refugio_transitoUpdateWithWhereUniqueWithoutRefugio_transitoInput = {
    where: animal_en_refugio_transitoWhereUniqueInput
    data: XOR<animal_en_refugio_transitoUpdateWithoutRefugio_transitoInput, animal_en_refugio_transitoUncheckedUpdateWithoutRefugio_transitoInput>
  }

  export type animal_en_refugio_transitoUpdateManyWithWhereWithoutRefugio_transitoInput = {
    where: animal_en_refugio_transitoScalarWhereInput
    data: XOR<animal_en_refugio_transitoUpdateManyMutationInput, animal_en_refugio_transitoUncheckedUpdateManyWithoutRefugio_transitoInput>
  }

  export type refugio_transitoCreateWithoutAnimal_en_refugio_transitoInput = {
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
  }

  export type refugio_transitoUncheckedCreateWithoutAnimal_en_refugio_transitoInput = {
    id?: number
    nombre: string
    direccion: string
    capacidad_maxima: number
    telefono: number
    tipo: string
  }

  export type refugio_transitoCreateOrConnectWithoutAnimal_en_refugio_transitoInput = {
    where: refugio_transitoWhereUniqueInput
    create: XOR<refugio_transitoCreateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
  }

  export type AnimalCreateWithoutAnimal_en_refugio_transitoInput = {
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_adoptado?: animal_adoptadoCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalUncheckedCreateWithoutAnimal_en_refugio_transitoInput = {
    id?: number
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_adoptado?: animal_adoptadoUncheckedCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalCreateOrConnectWithoutAnimal_en_refugio_transitoInput = {
    where: AnimalWhereUniqueInput
    create: XOR<AnimalCreateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
  }

  export type refugio_transitoUpsertWithoutAnimal_en_refugio_transitoInput = {
    update: XOR<refugio_transitoUpdateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
    create: XOR<refugio_transitoCreateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    where?: refugio_transitoWhereInput
  }

  export type refugio_transitoUpdateToOneWithWhereWithoutAnimal_en_refugio_transitoInput = {
    where?: refugio_transitoWhereInput
    data: XOR<refugio_transitoUpdateWithoutAnimal_en_refugio_transitoInput, refugio_transitoUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
  }

  export type refugio_transitoUpdateWithoutAnimal_en_refugio_transitoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type refugio_transitoUncheckedUpdateWithoutAnimal_en_refugio_transitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    direccion?: StringFieldUpdateOperationsInput | string
    capacidad_maxima?: IntFieldUpdateOperationsInput | number
    telefono?: IntFieldUpdateOperationsInput | number
    tipo?: StringFieldUpdateOperationsInput | string
  }

  export type AnimalUpsertWithoutAnimal_en_refugio_transitoInput = {
    update: XOR<AnimalUpdateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
    create: XOR<AnimalCreateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedCreateWithoutAnimal_en_refugio_transitoInput>
    where?: AnimalWhereInput
  }

  export type AnimalUpdateToOneWithWhereWithoutAnimal_en_refugio_transitoInput = {
    where?: AnimalWhereInput
    data: XOR<AnimalUpdateWithoutAnimal_en_refugio_transitoInput, AnimalUncheckedUpdateWithoutAnimal_en_refugio_transitoInput>
  }

  export type AnimalUpdateWithoutAnimal_en_refugio_transitoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_adoptado?: animal_adoptadoUpdateManyWithoutAnimalesNestedInput
  }

  export type AnimalUncheckedUpdateWithoutAnimal_en_refugio_transitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_adoptado?: animal_adoptadoUncheckedUpdateManyWithoutAnimalesNestedInput
  }

  export type AdoptanteCreateWithoutAnimal_adoptadoInput = {
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
  }

  export type AdoptanteUncheckedCreateWithoutAnimal_adoptadoInput = {
    id?: number
    nombre: string
    apellido: string
    edad: number
    direccion: string
    email: string
    telefono: number
  }

  export type AdoptanteCreateOrConnectWithoutAnimal_adoptadoInput = {
    where: AdoptanteWhereUniqueInput
    create: XOR<AdoptanteCreateWithoutAnimal_adoptadoInput, AdoptanteUncheckedCreateWithoutAnimal_adoptadoInput>
  }

  export type AnimalCreateWithoutAnimal_adoptadoInput = {
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_en_refugio_transito?: animal_en_refugio_transitoCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalUncheckedCreateWithoutAnimal_adoptadoInput = {
    id?: number
    nombre: string
    sexo: string
    especie: string
    edad: number
    raza: string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedCreateNestedManyWithoutAnimalesInput
  }

  export type AnimalCreateOrConnectWithoutAnimal_adoptadoInput = {
    where: AnimalWhereUniqueInput
    create: XOR<AnimalCreateWithoutAnimal_adoptadoInput, AnimalUncheckedCreateWithoutAnimal_adoptadoInput>
  }

  export type AdoptanteUpsertWithoutAnimal_adoptadoInput = {
    update: XOR<AdoptanteUpdateWithoutAnimal_adoptadoInput, AdoptanteUncheckedUpdateWithoutAnimal_adoptadoInput>
    create: XOR<AdoptanteCreateWithoutAnimal_adoptadoInput, AdoptanteUncheckedCreateWithoutAnimal_adoptadoInput>
    where?: AdoptanteWhereInput
  }

  export type AdoptanteUpdateToOneWithWhereWithoutAnimal_adoptadoInput = {
    where?: AdoptanteWhereInput
    data: XOR<AdoptanteUpdateWithoutAnimal_adoptadoInput, AdoptanteUncheckedUpdateWithoutAnimal_adoptadoInput>
  }

  export type AdoptanteUpdateWithoutAnimal_adoptadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
  }

  export type AdoptanteUncheckedUpdateWithoutAnimal_adoptadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    direccion?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    telefono?: IntFieldUpdateOperationsInput | number
  }

  export type AnimalUpsertWithoutAnimal_adoptadoInput = {
    update: XOR<AnimalUpdateWithoutAnimal_adoptadoInput, AnimalUncheckedUpdateWithoutAnimal_adoptadoInput>
    create: XOR<AnimalCreateWithoutAnimal_adoptadoInput, AnimalUncheckedCreateWithoutAnimal_adoptadoInput>
    where?: AnimalWhereInput
  }

  export type AnimalUpdateToOneWithWhereWithoutAnimal_adoptadoInput = {
    where?: AnimalWhereInput
    data: XOR<AnimalUpdateWithoutAnimal_adoptadoInput, AnimalUncheckedUpdateWithoutAnimal_adoptadoInput>
  }

  export type AnimalUpdateWithoutAnimal_adoptadoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUpdateManyWithoutAnimalesNestedInput
  }

  export type AnimalUncheckedUpdateWithoutAnimal_adoptadoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    especie?: StringFieldUpdateOperationsInput | string
    edad?: IntFieldUpdateOperationsInput | number
    raza?: StringFieldUpdateOperationsInput | string
    animal_en_refugio_transito?: animal_en_refugio_transitoUncheckedUpdateManyWithoutAnimalesNestedInput
  }

  export type animal_en_refugio_transitoCreateManyAnimalesInput = {
    id?: number
    refugio_id: number
  }

  export type animal_adoptadoCreateManyAnimalesInput = {
    id?: number
    adoptante_id: number
  }

  export type animal_en_refugio_transitoUpdateWithoutAnimalesInput = {
    refugio_transito?: refugio_transitoUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput
  }

  export type animal_en_refugio_transitoUncheckedUpdateWithoutAnimalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    refugio_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_en_refugio_transitoUncheckedUpdateManyWithoutAnimalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    refugio_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoUpdateWithoutAnimalesInput = {
    adoptante?: AdoptanteUpdateOneRequiredWithoutAnimal_adoptadoNestedInput
  }

  export type animal_adoptadoUncheckedUpdateWithoutAnimalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    adoptante_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoUncheckedUpdateManyWithoutAnimalesInput = {
    id?: IntFieldUpdateOperationsInput | number
    adoptante_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoCreateManyAdoptanteInput = {
    id?: number
    animal_id: number
  }

  export type animal_adoptadoUpdateWithoutAdoptanteInput = {
    animales?: AnimalUpdateOneRequiredWithoutAnimal_adoptadoNestedInput
  }

  export type animal_adoptadoUncheckedUpdateWithoutAdoptanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_adoptadoUncheckedUpdateManyWithoutAdoptanteInput = {
    id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_en_refugio_transitoCreateManyRefugio_transitoInput = {
    id?: number
    animal_id: number
  }

  export type animal_en_refugio_transitoUpdateWithoutRefugio_transitoInput = {
    animales?: AnimalUpdateOneRequiredWithoutAnimal_en_refugio_transitoNestedInput
  }

  export type animal_en_refugio_transitoUncheckedUpdateWithoutRefugio_transitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }

  export type animal_en_refugio_transitoUncheckedUpdateManyWithoutRefugio_transitoInput = {
    id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}